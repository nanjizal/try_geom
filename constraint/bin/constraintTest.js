// Generated by Haxe 4.0.0-preview.5+83d9c11
(function () { "use strict";
var $estr = function() { return js_Boot.__string_rec(this,''); },$hxEnums = $hxEnums || {},$_;
function $extend(from, fields) {
	var proto = Object.create(from);
	for (var name in fields) proto[name] = fields[name];
	if( fields.toString !== Object.prototype.toString ) proto.toString = fields.toString;
	return proto;
}
var Main = function() {
	this.appColors = [0,16711680,16744192,16776960,65280,255,4915330,9699539,4473924,3355443,789516,1118481,16777215];
	this.height = 1536;
	this.width = 2046;
	this.mouseIsDown = false;
	this.places = 12;
	this.points = 7;
	var t = [];
	var this1;
	if(t == null) {
		var t1 = [];
		var this2 = t1 == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t1;
		this1 = this2;
	} else {
		this1 = t;
	}
	this.triangles = this1;
	this.lineWidth = 0.3;
	this.circleSize = 5.;
	var this11;
	var canvas = window.document.createElement("canvas");
	var style = canvas.style;
	style.paddingLeft = "0px";
	style.paddingTop = "0px";
	style.left = "0px";
	style.top = "0px";
	style.position = "absolute";
	this11 = canvas;
	this.canvas = this11;
	this.distance = 50;
	var doc = window.document;
	this.canvas.width = this.width;
	this.canvas.height = this.height;
	this.centreX = this.canvas.width / 2;
	this.centreY = this.canvas.height / 2;
	doc.body.appendChild(this.canvas);
	this.surface = new justDrawing_Surface(this.canvas.getContext("2d",null));
	this.shapes = new trilateral_polys_Shapes(this.triangles,this.appColors);
	var this12 = { x : 100., y : 100., z : 0., w : 1.};
	this.mousePos = this12;
	this.innerDemo = new constraints_demo_Inner(100,100,this.distance);
	this.chainDemo = new constraints_demo_Chain(this.centreX,this.centreY,this.points,this.distance);
	this.fabrikDemo = new constraints_demo_Fabrik(this.centreX / 2,this.centreY / 2,this.points,this.distance);
	var collisionArea = 300;
	this.collisionDemo = new constraints_demo_Collision(this.centreX,this.centreY,this.places,this.circleSize,collisionArea,this.distance);
	htmlHelper_tools_AnimateTimer.onFrame = $bind(this,this.render);
	if(htmlHelper_tools_AnimateTimer.s == null) {
		htmlHelper_tools_AnimateTimer.s = window.document.createElement("style");
		htmlHelper_tools_AnimateTimer.s.innerHTML = "@keyframes spin { from { transform:rotate( 0deg ); } to { transform:rotate( 360deg ); } }";
		window.document.getElementsByTagName("head")[0].appendChild(htmlHelper_tools_AnimateTimer.s);
		htmlHelper_tools_AnimateTimer.s.animation = "spin 1s linear infinite";
		htmlHelper_tools_AnimateTimer.loop(60.0);
	}
	doc.onmousemove = $bind(this,this.mouseMove);
	doc.onmousedown = $bind(this,this.mouseDown);
	doc.onmouseup = $bind(this,this.mouseUp);
};
Main.__name__ = true;
Main.main = function() {
	new Main();
};
Main.prototype = {
	mouseDown: function(e) {
		this.mouseIsDown = true;
		var this1 = { x : e.clientX, y : e.clientY, z : 0., w : 1.};
		this.mousePos = this1;
	}
	,mouseMove: function(e) {
		if(this.mouseIsDown) {
			var this1 = { x : e.clientX, y : e.clientY, z : 0., w : 1.};
			this.mousePos = this1;
		}
	}
	,mouseUp: function(e) {
		var this1 = { x : e.clientX, y : e.clientY, z : 0., w : 1.};
		this.mousePos = this1;
		this.mouseIsDown = false;
	}
	,render: function(i) {
		this.triangles = [];
		this.shapes.triangles = this.triangles;
		var x = this.mousePos.x;
		var y = this.mousePos.y;
		var radius = this.distance;
		var this1 = this.triangles;
		var gamma = 2 * Math.PI;
		var t = [];
		var this2;
		if(t == null) {
			var t1 = [];
			var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
			this2 = this3;
		} else {
			this2 = t;
		}
		var this4 = this2;
		var out = this4;
		var pi = Math.PI;
		var step = pi * 2 / 36;
		var dif;
		switch(trilateral_angle_DifferencePreference.CLOCKWISE._hx_index) {
		case 0:
			var f;
			if(0 > Math.PI) {
				f = 0;
			} else {
				var a = 0 % (2 * Math.PI);
				f = a >= 0 ? a : a + 2 * Math.PI;
			}
			var this5 = f;
			var za = this5;
			var f1;
			if(gamma >= 0 && gamma > Math.PI) {
				f1 = gamma;
			} else {
				var a1 = gamma % (2 * Math.PI);
				f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
			}
			var this6 = f1;
			var zb = this6;
			var fa = za;
			var fb = zb;
			var theta = Math.abs(0 - gamma);
			var clockwise = 0 < gamma;
			var dif1 = clockwise ? theta : -theta;
			dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
			break;
		case 1:
			var f2;
			if(0 > Math.PI) {
				f2 = 0;
			} else {
				var a2 = 0 % (2 * Math.PI);
				f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
			}
			var this7 = f2;
			var za1 = this7;
			var f3;
			if(gamma >= 0 && gamma > Math.PI) {
				f3 = gamma;
			} else {
				var a3 = gamma % (2 * Math.PI);
				f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
			}
			var this8 = f3;
			var zb1 = this8;
			var fa1 = za1;
			var fb1 = zb1;
			var theta1 = Math.abs(0 - gamma);
			var clockwise1 = 0 < gamma;
			var dif2 = clockwise1 ? theta1 : -theta1;
			dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
			break;
		case 2:
			var f4;
			if(0 > Math.PI) {
				f4 = 0;
			} else {
				var a4 = 0 % (2 * Math.PI);
				f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
			}
			var this9 = f4;
			var za2 = this9;
			var f5;
			if(gamma >= 0 && gamma > Math.PI) {
				f5 = gamma;
			} else {
				var a5 = gamma % (2 * Math.PI);
				f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
			}
			var this10 = f5;
			var zb2 = this10;
			var fa2 = 0;
			var fb2 = gamma;
			var theta2 = Math.abs(0 - gamma);
			var smallest = theta2 <= Math.PI;
			var clockwise2 = 0 < gamma;
			var dif3 = clockwise2 ? theta2 : -theta2;
			dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
			break;
		case 3:
			var f6;
			if(0 > Math.PI) {
				f6 = 0;
			} else {
				var a6 = 0 % (2 * Math.PI);
				f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
			}
			var this11 = f6;
			var za3 = this11;
			var f7;
			if(gamma >= 0 && gamma > Math.PI) {
				f7 = gamma;
			} else {
				var a7 = gamma % (2 * Math.PI);
				f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
			}
			var this12 = f7;
			var zb3 = this12;
			var fa3 = 0;
			var fb3 = gamma;
			var theta3 = Math.abs(0 - gamma);
			var largest = theta3 > Math.PI;
			var clockwise3 = 0 < gamma;
			var dif4 = clockwise3 ? theta3 : -theta3;
			dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
			break;
		}
		var positive = dif >= 0;
		var totalSteps = Math.ceil(Math.abs(dif) / step);
		var step1 = dif / totalSteps;
		var angle = 0;
		var cx;
		var cy;
		var bx = 0;
		var by = 0;
		var dx = 0;
		var dy = 0;
		var ex = 0;
		var ey = 0;
		var r2 = radius - 1;
		var _g = 0;
		var _g1 = totalSteps + 1;
		while(_g < _g1) {
			var i1 = _g++;
			cx = x + radius * Math.sin(angle);
			cy = y + radius * Math.cos(angle);
			ex = x + r2 * Math.sin(angle);
			ey = y + r2 * Math.cos(angle);
			if(i1 != 0) {
				var t0 = new trilateral_tri_Trilateral(dx,dy,bx,by,cx,cy);
				var t11 = new trilateral_tri_Trilateral(dx,dy,cx,cy,ex,ey);
				out[out.length] = t0;
				out[out.length] = t11;
			}
			angle += step1;
			bx = cx;
			by = cy;
			dx = ex;
			dy = ey;
		}
		var triArr = out;
		var colorID = this.appColors.indexOf(3355443);
		var tri;
		var _g2 = 0;
		while(_g2 < triArr.length) {
			var t2 = triArr[_g2];
			++_g2;
			if(t2 != null) {
				var t3 = Object.create(trilateral_tri_Triangle.prototype);
				t3.id = 0;
				t3.ax = t2.ax;
				t3.ay = t2.ay;
				t3.bx = t2.bx;
				t3.by = t2.by;
				t3.cx = t2.cx;
				t3.cy = t2.cy;
				t3.mark = t2.mark;
				t3.depth = 0;
				t3.alpha = 1.;
				t3.colorID = colorID;
				t3.colorA = colorID;
				t3.colorB = colorID;
				t3.colorC = colorID;
				t3.windingAdjusted = t2.windingAdjusted;
				tri = t3;
				this1[this1.length] = tri;
			}
		}
		var _this = this.innerDemo;
		var anchor = this.mousePos;
		var b = _this.point;
		var toNext_x = anchor.x - b.x;
		var toNext_y = anchor.y - b.y;
		var toNext_z = anchor.z - b.z;
		var toNext_w = anchor.w - b.w;
		if(Math.sqrt(toNext_x * toNext_x + toNext_y * toNext_y + toNext_z * toNext_z + toNext_w * toNext_w) > _this.distance) {
			var this13 = _this.point;
			var distance = _this.distance;
			var a_x = this13.x - anchor.x;
			var a_y = this13.y - anchor.y;
			var a_z = this13.z - anchor.z;
			var a_w = this13.w - anchor.w;
			var currentLength = Math.sqrt(a_x * a_x + a_y * a_y + a_z * a_z + a_w * a_w);
			if(currentLength != 0.) {
				var mul = 1. / currentLength;
				a_x *= mul;
				a_y *= mul;
				a_z *= mul;
				a_w *= mul;
				var tmp = a_x * a_x + a_y * a_y + a_z * a_z + a_w * a_w;
			}
			var a_x1 = a_x * distance;
			var a_y1 = a_y * distance;
			var a_z1 = a_z * distance;
			var a_w1 = a_w * distance;
			var this14 = { x : a_x1 + anchor.x, y : a_y1 + anchor.y, z : a_z1 + anchor.z, w : a_w1 + anchor.w};
			_this.point = this14;
		}
		var x1 = this.innerDemo.point.x;
		var y1 = this.innerDemo.point.y;
		var _this1 = this.shapes;
		var radius1 = this.circleSize;
		var color = this.appColors.indexOf(16777215);
		var this15 = _this1.triangles;
		var id = _this1.refCount++;
		var t4 = [];
		var this16;
		if(t4 == null) {
			var t5 = [];
			var this17 = t5 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t5;
			this16 = this17;
		} else {
			this16 = t4;
		}
		var this18 = this16;
		var out1 = this18;
		var pi1 = Math.PI;
		var theta4 = pi1 / 2;
		var step2 = pi1 * 2 / 36;
		var bx1;
		var by1;
		var cx1;
		var cy1;
		var _g3 = 0;
		var _g11 = 36;
		while(_g3 < _g11) {
			var i2 = _g3++;
			bx1 = x1 + radius1 * Math.sin(theta4);
			by1 = y1 + radius1 * Math.cos(theta4);
			theta4 += step2;
			cx1 = x1 + radius1 * Math.sin(theta4);
			cy1 = y1 + radius1 * Math.cos(theta4);
			var tri1 = new trilateral_tri_Trilateral(x1,y1,bx1,by1,cx1,cy1);
			out1[out1.length] = tri1;
		}
		var triArr1 = out1;
		var tri2;
		var _g4 = 0;
		while(_g4 < triArr1.length) {
			var t6 = triArr1[_g4];
			++_g4;
			if(t6 != null) {
				var t7 = Object.create(trilateral_tri_Triangle.prototype);
				t7.id = id;
				t7.ax = t6.ax;
				t7.ay = t6.ay;
				t7.bx = t6.bx;
				t7.by = t6.by;
				t7.cx = t6.cx;
				t7.cy = t6.cy;
				t7.mark = t6.mark;
				t7.depth = 0;
				t7.alpha = 1.;
				t7.colorID = color;
				t7.colorA = color;
				t7.colorB = color;
				t7.colorC = color;
				t7.windingAdjusted = t6.windingAdjusted;
				tri2 = t7;
				this15[this15.length] = tri2;
			}
		}
		var _gthis = this;
		var jointRender = function(i3,joint) {
			var _this2 = _gthis.shapes;
			var x2 = joint.x;
			var y2 = joint.y;
			var radius2 = _gthis.circleSize;
			var color1 = _gthis.appColors.indexOf(16711680) + i3;
			var this19 = _this2.triangles;
			var id1 = _this2.refCount++;
			var t8 = [];
			var this20;
			if(t8 == null) {
				var t9 = [];
				var this21 = t9 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t9;
				this20 = this21;
			} else {
				this20 = t8;
			}
			var this22 = this20;
			var out2 = this22;
			var pi2 = Math.PI;
			var theta5 = pi2 / 2;
			var step3 = pi2 * 2 / 36;
			var bx2;
			var by2;
			var cx2;
			var cy2;
			var _g5 = 0;
			var _g12 = 36;
			while(_g5 < _g12) {
				var i4 = _g5++;
				bx2 = x2 + radius2 * Math.sin(theta5);
				by2 = y2 + radius2 * Math.cos(theta5);
				theta5 += step3;
				cx2 = x2 + radius2 * Math.sin(theta5);
				cy2 = y2 + radius2 * Math.cos(theta5);
				var tri3 = new trilateral_tri_Trilateral(x2,y2,bx2,by2,cx2,cy2);
				out2[out2.length] = tri3;
			}
			var triArr2 = out2;
			var tri4;
			var _g6 = 0;
			while(_g6 < triArr2.length) {
				var t10 = triArr2[_g6];
				++_g6;
				if(t10 != null) {
					var t12 = Object.create(trilateral_tri_Triangle.prototype);
					t12.id = id1;
					t12.ax = t10.ax;
					t12.ay = t10.ay;
					t12.bx = t10.bx;
					t12.by = t10.by;
					t12.cx = t10.cx;
					t12.cy = t10.cy;
					t12.mark = t10.mark;
					t12.depth = 0;
					t12.alpha = 1.;
					t12.colorID = color1;
					t12.colorA = color1;
					t12.colorB = color1;
					t12.colorC = color1;
					t12.windingAdjusted = t10.windingAdjusted;
					tri4 = t12;
					this19[this19.length] = tri4;
				}
			}
			return _this2.refCount - 1;
		};
		var _this3 = this.chainDemo;
		var anchor1 = this.mousePos;
		var joint1 = _this3.joints[0];
		joint1.x = anchor1.x;
		joint1.y = anchor1.y;
		jointRender(0,joint1);
		var _g7 = 1;
		var _g13 = _this3.points;
		while(_g7 < _g13) {
			var i5 = _g7++;
			var this23 = _this3.joints[i5];
			var anchor2 = _this3.joints[i5 - 1];
			var distance1 = _this3.distance;
			var a_x2 = this23.x - anchor2.x;
			var a_y2 = this23.y - anchor2.y;
			var a_z2 = this23.z - anchor2.z;
			var a_w2 = this23.w - anchor2.w;
			var currentLength1 = Math.sqrt(a_x2 * a_x2 + a_y2 * a_y2 + a_z2 * a_z2 + a_w2 * a_w2);
			if(currentLength1 != 0.) {
				var mul1 = 1. / currentLength1;
				a_x2 *= mul1;
				a_y2 *= mul1;
				a_z2 *= mul1;
				a_w2 *= mul1;
				var tmp1 = a_x2 * a_x2 + a_y2 * a_y2 + a_z2 * a_z2 + a_w2 * a_w2;
			}
			var a_x3 = a_x2 * distance1;
			var a_y3 = a_y2 * distance1;
			var a_z3 = a_z2 * distance1;
			var a_w3 = a_w2 * distance1;
			var this24 = { x : a_x3 + anchor2.x, y : a_y3 + anchor2.y, z : a_z3 + anchor2.z, w : a_w3 + anchor2.w};
			_this3.joints[i5] = this24;
			joint1 = _this3.joints[i5];
			jointRender(i5,joint1);
		}
		var _gthis1 = this;
		var jointRender1 = function(i6,joint2) {
			var _this4 = _gthis1.shapes;
			var x3 = joint2.x;
			var y3 = joint2.y;
			var radius3 = _gthis1.circleSize;
			var color2 = _gthis1.appColors.indexOf(16711680) + i6;
			var this25 = _this4.triangles;
			var id2 = _this4.refCount++;
			var t13 = [];
			var this26;
			if(t13 == null) {
				var t14 = [];
				var this27 = t14 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t14;
				this26 = this27;
			} else {
				this26 = t13;
			}
			var this28 = this26;
			var out3 = this28;
			var pi3 = Math.PI;
			var theta6 = pi3 / 2;
			var step4 = pi3 * 2 / 36;
			var bx3;
			var by3;
			var cx3;
			var cy3;
			var _g8 = 0;
			var _g14 = 36;
			while(_g8 < _g14) {
				var i7 = _g8++;
				bx3 = x3 + radius3 * Math.sin(theta6);
				by3 = y3 + radius3 * Math.cos(theta6);
				theta6 += step4;
				cx3 = x3 + radius3 * Math.sin(theta6);
				cy3 = y3 + radius3 * Math.cos(theta6);
				var tri5 = new trilateral_tri_Trilateral(x3,y3,bx3,by3,cx3,cy3);
				out3[out3.length] = tri5;
			}
			var triArr3 = out3;
			var tri6;
			var _g9 = 0;
			while(_g9 < triArr3.length) {
				var t15 = triArr3[_g9];
				++_g9;
				if(t15 != null) {
					var t16 = Object.create(trilateral_tri_Triangle.prototype);
					t16.id = id2;
					t16.ax = t15.ax;
					t16.ay = t15.ay;
					t16.bx = t15.bx;
					t16.by = t15.by;
					t16.cx = t15.cx;
					t16.cy = t15.cy;
					t16.mark = t15.mark;
					t16.depth = 0;
					t16.alpha = 1.;
					t16.colorID = color2;
					t16.colorA = color2;
					t16.colorB = color2;
					t16.colorC = color2;
					t16.windingAdjusted = t15.windingAdjusted;
					tri6 = t16;
					this25[this25.length] = tri6;
				}
			}
			return _this4.refCount - 1;
		};
		var _this5 = this.fabrikDemo;
		var anchor3 = this.mousePos;
		var joint3 = _this5.joints[0];
		joint3.x = anchor3.x;
		joint3.y = anchor3.y;
		jointRender1(0,joint3);
		var _g10 = 1;
		var _g15 = _this5.points;
		while(_g10 < _g15) {
			var i8 = _g10++;
			var this29 = _this5.joints[i8];
			var anchor4 = _this5.joints[i8 - 1];
			var distance2 = _this5.distance;
			var a_x4 = this29.x - anchor4.x;
			var a_y4 = this29.y - anchor4.y;
			var a_z4 = this29.z - anchor4.z;
			var a_w4 = this29.w - anchor4.w;
			var currentLength2 = Math.sqrt(a_x4 * a_x4 + a_y4 * a_y4 + a_z4 * a_z4 + a_w4 * a_w4);
			if(currentLength2 != 0.) {
				var mul2 = 1. / currentLength2;
				a_x4 *= mul2;
				a_y4 *= mul2;
				a_z4 *= mul2;
				a_w4 *= mul2;
				var tmp2 = a_x4 * a_x4 + a_y4 * a_y4 + a_z4 * a_z4 + a_w4 * a_w4;
			}
			var a_x5 = a_x4 * distance2;
			var a_y5 = a_y4 * distance2;
			var a_z5 = a_z4 * distance2;
			var a_w5 = a_w4 * distance2;
			var this30 = { x : a_x5 + anchor4.x, y : a_y5 + anchor4.y, z : a_z5 + anchor4.z, w : a_w5 + anchor4.w};
			_this5.joints[i8] = this30;
		}
		var j;
		var joint4 = _this5.joints[_this5.points - 1];
		joint4.x = _this5.x;
		joint4.y = _this5.y;
		jointRender1(_this5.points - 1,joint4);
		var _g21 = 1;
		var _g31 = _this5.points;
		while(_g21 < _g31) {
			var i9 = _g21++;
			j = _this5.points - i9;
			var this31 = _this5.joints[j - 1];
			var anchor5 = _this5.joints[j];
			var distance3 = _this5.distance;
			var a_x6 = this31.x - anchor5.x;
			var a_y6 = this31.y - anchor5.y;
			var a_z6 = this31.z - anchor5.z;
			var a_w6 = this31.w - anchor5.w;
			var currentLength3 = Math.sqrt(a_x6 * a_x6 + a_y6 * a_y6 + a_z6 * a_z6 + a_w6 * a_w6);
			if(currentLength3 != 0.) {
				var mul3 = 1. / currentLength3;
				a_x6 *= mul3;
				a_y6 *= mul3;
				a_z6 *= mul3;
				a_w6 *= mul3;
				var tmp3 = a_x6 * a_x6 + a_y6 * a_y6 + a_z6 * a_z6 + a_w6 * a_w6;
			}
			var a_x7 = a_x6 * distance3;
			var a_y7 = a_y6 * distance3;
			var a_z7 = a_z6 * distance3;
			var a_w7 = a_w6 * distance3;
			var this32 = { x : a_x7 + anchor5.x, y : a_y7 + anchor5.y, z : a_z7 + anchor5.z, w : a_w7 + anchor5.w};
			_this5.joints[j - 1] = this32;
			joint4 = _this5.joints[j - 1];
			jointRender1(j,joint4);
		}
		var spots = this.chainDemo.joints;
		var width = this.lineWidth;
		var path = new trilateral_path_Fine(null,null,3);
		path.width = width;
		path.moveTo(spots[0].x,spots[0].y);
		var _g16 = 1;
		var _g17 = this.points;
		while(_g16 < _g17) {
			var i10 = _g16++;
			var x_ = spots[i10].x;
			var y_ = spots[i10].y;
			var repeat = path.x == x_ && path.y == y_;
			if(!repeat) {
				if(path.widthFunction != null) {
					path.width = path.widthFunction(path.width,path.x,path.x,x_,y_);
				}
				var _this6 = path.contour;
				var ax_ = path.x;
				var ay_ = path.y;
				var width_ = path.width;
				var oldAngle = _this6.dx != null ? _this6.angle1 : null;
				_this6.halfA = Math.PI / 2;
				_this6.ax = x_;
				_this6.ay = y_;
				_this6.bx = ax_;
				_this6.by = ay_;
				_this6.beta = Math.PI / 2 - _this6.halfA;
				_this6.r = width_ / 2 * Math.cos(_this6.beta);
				_this6.theta = Math.atan2(_this6.ay - _this6.by,_this6.ax - _this6.bx);
				if(_this6.theta > 0) {
					if(_this6.halfA < 0) {
						_this6.angle2 = _this6.theta + _this6.halfA + Math.PI / 2;
						_this6.angle1 = _this6.theta - _this6.halfA;
					} else {
						_this6.angle1 = _this6.theta + _this6.halfA - Math.PI;
						_this6.angle2 = _this6.theta + _this6.halfA;
					}
				} else if(_this6.halfA > 0) {
					_this6.angle1 = _this6.theta + _this6.halfA - Math.PI;
					_this6.angle2 = _this6.theta + _this6.halfA;
				} else {
					_this6.angle2 = _this6.theta + _this6.halfA + Math.PI / 2;
					_this6.angle1 = _this6.theta - _this6.halfA;
				}
				if(_this6.dxPrev != null) {
					_this6.dxOld = _this6.dxPrev;
				}
				if(_this6.dyPrev != null) {
					_this6.dyOld = _this6.dyPrev;
				}
				if(_this6.exPrev != null) {
					_this6.exOld = _this6.exPrev;
				}
				if(_this6.eyPrev != null) {
					_this6.eyOld = _this6.eyPrev;
				}
				if(_this6.dx != null) {
					_this6.dxPrev = _this6.dx;
				}
				if(_this6.dy != null) {
					_this6.dyPrev = _this6.dy;
				}
				if(_this6.ex != null) {
					_this6.exPrev = _this6.ex;
				}
				if(_this6.ey != null) {
					_this6.eyPrev = _this6.ey;
				}
				_this6.dx = _this6.bx + _this6.r * Math.cos(_this6.angle1);
				_this6.dy = _this6.by + _this6.r * Math.sin(_this6.angle1);
				_this6.ex = _this6.bx + _this6.r * Math.cos(_this6.angle2);
				_this6.ey = _this6.by + _this6.r * Math.sin(_this6.angle2);
				_this6.ax = ax_;
				_this6.ay = ay_;
				_this6.bx = x_;
				_this6.by = y_;
				_this6.theta = Math.atan2(_this6.ay - _this6.by,_this6.ax - _this6.bx);
				if(_this6.theta > 0) {
					if(_this6.halfA < 0) {
						_this6.angle2 = _this6.theta + _this6.halfA + Math.PI / 2;
						_this6.angle1 = _this6.theta - _this6.halfA;
					} else {
						_this6.angle1 = _this6.theta + _this6.halfA - Math.PI;
						_this6.angle2 = _this6.theta + _this6.halfA;
					}
				} else if(_this6.halfA > 0) {
					_this6.angle1 = _this6.theta + _this6.halfA - Math.PI;
					_this6.angle2 = _this6.theta + _this6.halfA;
				} else {
					_this6.angle2 = _this6.theta + _this6.halfA + Math.PI / 2;
					_this6.angle1 = _this6.theta - _this6.halfA;
				}
				if(_this6.dxPrev != null) {
					_this6.dxOld = _this6.dxPrev;
				}
				if(_this6.dyPrev != null) {
					_this6.dyOld = _this6.dyPrev;
				}
				if(_this6.exPrev != null) {
					_this6.exOld = _this6.exPrev;
				}
				if(_this6.eyPrev != null) {
					_this6.eyOld = _this6.eyPrev;
				}
				if(_this6.dx != null) {
					_this6.dxPrev = _this6.dx;
				}
				if(_this6.dy != null) {
					_this6.dyPrev = _this6.dy;
				}
				if(_this6.ex != null) {
					_this6.exPrev = _this6.ex;
				}
				if(_this6.ey != null) {
					_this6.eyPrev = _this6.ey;
				}
				_this6.dx = _this6.bx + _this6.r * Math.cos(_this6.angle1);
				_this6.dy = _this6.by + _this6.r * Math.sin(_this6.angle1);
				_this6.ex = _this6.bx + _this6.r * Math.cos(_this6.angle2);
				_this6.ey = _this6.by + _this6.r * Math.sin(_this6.angle2);
				var x4 = _this6.dxOld - x_;
				var y4 = _this6.dyOld - y_;
				var x5 = _this6.exOld - x_;
				var y5 = _this6.eyOld - y_;
				var clockWise = x4 * x4 + y4 * y4 > x5 * x5 + y5 * y5;
				var theta0;
				var theta11;
				if(clockWise) {
					theta0 = -Math.atan2(_this6.ay - _this6.dyOld,_this6.ax - _this6.dxOld) - Math.PI / 2;
					theta11 = -Math.atan2(_this6.ay - _this6.eyPrev,_this6.ax - _this6.exPrev) - Math.PI / 2;
				} else {
					theta0 = -Math.atan2(_this6.ay - _this6.eyOld,_this6.ax - _this6.exOld) - Math.PI / 2;
					theta11 = -Math.atan2(_this6.ay - _this6.dyPrev,_this6.ax - _this6.dxPrev) - Math.PI / 2;
				}
				var dif5;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f8;
					if(theta0 >= 0 && theta0 > Math.PI) {
						f8 = theta0;
					} else {
						var a8 = theta0 % (2 * Math.PI);
						f8 = a8 >= 0 ? a8 : a8 + 2 * Math.PI;
					}
					var this33 = f8;
					var za4 = this33;
					var f9;
					if(theta11 >= 0 && theta11 > Math.PI) {
						f9 = theta11;
					} else {
						var a9 = theta11 % (2 * Math.PI);
						f9 = a9 >= 0 ? a9 : a9 + 2 * Math.PI;
					}
					var this34 = f9;
					var zb4 = this34;
					var fa4 = za4;
					var fb4 = zb4;
					var theta7 = Math.abs(theta0 - theta11);
					var clockwise4 = theta0 < theta11;
					var dif6 = clockwise4 ? theta7 : -theta7;
					dif5 = dif6 > 0 ? dif6 : 2 * Math.PI + dif6;
					break;
				case 1:
					var f10;
					if(theta0 >= 0 && theta0 > Math.PI) {
						f10 = theta0;
					} else {
						var a10 = theta0 % (2 * Math.PI);
						f10 = a10 >= 0 ? a10 : a10 + 2 * Math.PI;
					}
					var this35 = f10;
					var za5 = this35;
					var f11;
					if(theta11 >= 0 && theta11 > Math.PI) {
						f11 = theta11;
					} else {
						var a11 = theta11 % (2 * Math.PI);
						f11 = a11 >= 0 ? a11 : a11 + 2 * Math.PI;
					}
					var this36 = f11;
					var zb5 = this36;
					var fa5 = za5;
					var fb5 = zb5;
					var theta8 = Math.abs(theta0 - theta11);
					var clockwise5 = theta0 < theta11;
					var dif7 = clockwise5 ? theta8 : -theta8;
					dif5 = dif7 < 0 ? dif7 : -2 * Math.PI + dif7;
					break;
				case 2:
					var f12;
					if(theta0 >= 0 && theta0 > Math.PI) {
						f12 = theta0;
					} else {
						var a12 = theta0 % (2 * Math.PI);
						f12 = a12 >= 0 ? a12 : a12 + 2 * Math.PI;
					}
					var this37 = f12;
					var za6 = this37;
					var f13;
					if(theta11 >= 0 && theta11 > Math.PI) {
						f13 = theta11;
					} else {
						var a13 = theta11 % (2 * Math.PI);
						f13 = a13 >= 0 ? a13 : a13 + 2 * Math.PI;
					}
					var this38 = f13;
					var zb6 = this38;
					var fa6 = theta0;
					var fb6 = theta11;
					var theta9 = Math.abs(theta0 - theta11);
					var smallest1 = theta9 <= Math.PI;
					var clockwise6 = theta0 < theta11;
					var dif8 = clockwise6 ? theta9 : -theta9;
					dif5 = smallest1 ? dif8 : clockwise6 ? -(2 * Math.PI - theta9) : 2 * Math.PI - theta9;
					break;
				case 3:
					var f14;
					if(theta0 >= 0 && theta0 > Math.PI) {
						f14 = theta0;
					} else {
						var a14 = theta0 % (2 * Math.PI);
						f14 = a14 >= 0 ? a14 : a14 + 2 * Math.PI;
					}
					var this39 = f14;
					var za7 = this39;
					var f15;
					if(theta11 >= 0 && theta11 > Math.PI) {
						f15 = theta11;
					} else {
						var a15 = theta11 % (2 * Math.PI);
						f15 = a15 >= 0 ? a15 : a15 + 2 * Math.PI;
					}
					var this40 = f15;
					var zb7 = this40;
					var fa7 = theta0;
					var fb7 = theta11;
					var theta10 = Math.abs(theta0 - theta11);
					var largest1 = theta10 > Math.PI;
					var clockwise7 = theta0 < theta11;
					var dif9 = clockwise7 ? theta10 : -theta10;
					dif5 = largest1 ? dif9 : clockwise7 ? -(2 * Math.PI - theta10) : 2 * Math.PI - theta10;
					break;
				}
				if(_this6.count != 0) {
					var gamma1 = Math.abs(dif5) / 2;
					var h = width_ / 2 / Math.cos(gamma1);
					var f16;
					if(theta0 <= Math.PI && theta0 > -Math.PI) {
						f16 = theta0;
					} else {
						var a16 = (theta0 + Math.PI) % (2 * Math.PI);
						f16 = a16 >= 0 ? a16 - Math.PI : a16 + Math.PI;
					}
					var this41 = f16;
					var start = this41;
					var start2 = start;
					var delta = start2 + dif5 / 2 + Math.PI;
					_this6.jx = _this6.ax + h * Math.sin(delta);
					_this6.jy = _this6.ay + h * Math.cos(delta);
				}
				if(_this6.count == 0 && (_this6.endLine == 1 || _this6.endLine == 3)) {
					var ax = _this6.ax;
					var ay = _this6.ay;
					var radius4 = width_ / 2;
					var beta = -_this6.angle1 - Math.PI / 2;
					var gamma2 = -_this6.angle1 - Math.PI / 2 + Math.PI;
					var temp = [];
					var this42 = _this6.triArr;
					var t17 = [];
					var this43;
					if(t17 == null) {
						var t18 = [];
						var this44 = t18 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t18;
						this43 = this44;
					} else {
						this43 = t17;
					}
					var this45 = this43;
					var out4 = this45;
					var pi4 = Math.PI;
					var step5 = pi4 * 2 / 36;
					var dif10;
					switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
					case 0:
						var f17;
						if(beta >= 0 && beta > Math.PI) {
							f17 = beta;
						} else {
							var a17 = beta % (2 * Math.PI);
							f17 = a17 >= 0 ? a17 : a17 + 2 * Math.PI;
						}
						var this46 = f17;
						var za8 = this46;
						var f18;
						if(gamma2 >= 0 && gamma2 > Math.PI) {
							f18 = gamma2;
						} else {
							var a18 = gamma2 % (2 * Math.PI);
							f18 = a18 >= 0 ? a18 : a18 + 2 * Math.PI;
						}
						var this47 = f18;
						var zb8 = this47;
						var fa8 = za8;
						var fb8 = zb8;
						var theta12 = Math.abs(beta - gamma2);
						var clockwise8 = beta < gamma2;
						var dif11 = clockwise8 ? theta12 : -theta12;
						dif10 = dif11 > 0 ? dif11 : 2 * Math.PI + dif11;
						break;
					case 1:
						var f19;
						if(beta >= 0 && beta > Math.PI) {
							f19 = beta;
						} else {
							var a19 = beta % (2 * Math.PI);
							f19 = a19 >= 0 ? a19 : a19 + 2 * Math.PI;
						}
						var this48 = f19;
						var za9 = this48;
						var f20;
						if(gamma2 >= 0 && gamma2 > Math.PI) {
							f20 = gamma2;
						} else {
							var a20 = gamma2 % (2 * Math.PI);
							f20 = a20 >= 0 ? a20 : a20 + 2 * Math.PI;
						}
						var this49 = f20;
						var zb9 = this49;
						var fa9 = za9;
						var fb9 = zb9;
						var theta13 = Math.abs(beta - gamma2);
						var clockwise9 = beta < gamma2;
						var dif12 = clockwise9 ? theta13 : -theta13;
						dif10 = dif12 < 0 ? dif12 : -2 * Math.PI + dif12;
						break;
					case 2:
						var f21;
						if(beta >= 0 && beta > Math.PI) {
							f21 = beta;
						} else {
							var a21 = beta % (2 * Math.PI);
							f21 = a21 >= 0 ? a21 : a21 + 2 * Math.PI;
						}
						var this50 = f21;
						var za10 = this50;
						var f22;
						if(gamma2 >= 0 && gamma2 > Math.PI) {
							f22 = gamma2;
						} else {
							var a22 = gamma2 % (2 * Math.PI);
							f22 = a22 >= 0 ? a22 : a22 + 2 * Math.PI;
						}
						var this51 = f22;
						var zb10 = this51;
						var fa10 = beta;
						var fb10 = gamma2;
						var theta14 = Math.abs(beta - gamma2);
						var smallest2 = theta14 <= Math.PI;
						var clockwise10 = beta < gamma2;
						var dif13 = clockwise10 ? theta14 : -theta14;
						dif10 = smallest2 ? dif13 : clockwise10 ? -(2 * Math.PI - theta14) : 2 * Math.PI - theta14;
						break;
					case 3:
						var f23;
						if(beta >= 0 && beta > Math.PI) {
							f23 = beta;
						} else {
							var a23 = beta % (2 * Math.PI);
							f23 = a23 >= 0 ? a23 : a23 + 2 * Math.PI;
						}
						var this52 = f23;
						var za11 = this52;
						var f24;
						if(gamma2 >= 0 && gamma2 > Math.PI) {
							f24 = gamma2;
						} else {
							var a24 = gamma2 % (2 * Math.PI);
							f24 = a24 >= 0 ? a24 : a24 + 2 * Math.PI;
						}
						var this53 = f24;
						var zb11 = this53;
						var fa11 = beta;
						var fb11 = gamma2;
						var theta15 = Math.abs(beta - gamma2);
						var largest2 = theta15 > Math.PI;
						var clockwise11 = beta < gamma2;
						var dif14 = clockwise11 ? theta15 : -theta15;
						dif10 = largest2 ? dif14 : clockwise11 ? -(2 * Math.PI - theta15) : 2 * Math.PI - theta15;
						break;
					}
					var positive1 = dif10 >= 0;
					var totalSteps1 = Math.ceil(Math.abs(dif10) / step5);
					var step6 = dif10 / totalSteps1;
					var angle1 = beta;
					var cx4;
					var cy4;
					var bx4 = 0;
					var by4 = 0;
					var p2 = temp.length;
					var _g18 = 0;
					var _g19 = totalSteps1 + 1;
					while(_g18 < _g19) {
						var i11 = _g18++;
						cx4 = ax + radius4 * Math.sin(angle1);
						cy4 = ay + radius4 * Math.cos(angle1);
						temp[p2++] = cx4;
						temp[p2++] = cy4;
						if(i11 != 0) {
							var t19 = new trilateral_tri_Trilateral(ax,ay,bx4,by4,cx4,cy4);
							out4[out4.length] = t19;
						}
						angle1 += step6;
						bx4 = cx4;
						by4 = cy4;
					}
					var triArr4 = out4;
					var _g20 = 0;
					while(_g20 < triArr4.length) {
						var t20 = triArr4[_g20];
						++_g20;
						this42[this42.length] = t20;
					}
					var pA = _this6.pointsAnti.length;
					var len = temp.length / 2 | 0;
					var p4 = temp.length / 4 | 0;
					var _g22 = 0;
					var _g110 = p4;
					while(_g22 < _g110) {
						var i12 = _g22++;
						_this6.pointsAnti[pA++] = temp[len - 2 * i12 + 1];
						_this6.pointsAnti[pA++] = temp[len - 2 * i12];
					}
					var pC = _this6.pointsClock.length;
					var _g23 = 0;
					var _g32 = p4;
					while(_g23 < _g32) {
						var i13 = _g23++;
						_this6.pointsClock[pC++] = temp[i13 * 2 + len + 1];
						_this6.pointsClock[pC++] = temp[i13 * 2 + len];
					}
				}
				if(_this6.count != 0) {
					_this6.addQuads(clockWise,width_);
				}
				_this6.quadIndex = _this6.triArr.length;
				if(_this6.count == 0) {
					_this6.penultimateAX = _this6.dxPrev;
					_this6.penultimateAY = _this6.dyPrev;
					_this6.lastAntiX = _this6.ex;
					_this6.lastAntiY = _this6.ey;
					_this6.penultimateCX = _this6.dx;
					_this6.penultimateCY = _this6.dy;
					_this6.lastClockX = _this6.exPrev;
					_this6.lastClockY = _this6.eyPrev;
					var this54 = _this6.triArr;
					var tri7 = new trilateral_tri_Trilateral(_this6.dxPrev,_this6.dyPrev,_this6.dx,_this6.dy,_this6.ex,_this6.ey,0);
					this54[this54.length] = tri7;
					var this55 = _this6.triArr;
					var tri8 = new trilateral_tri_Trilateral(_this6.dxPrev,_this6.dyPrev,_this6.dx,_this6.dy,_this6.exPrev,_this6.eyPrev,0);
					this55[this55.length] = tri8;
				} else {
					if(clockWise && !_this6.lastClock) {
						_this6.penultimateAX = _this6.jx;
						_this6.penultimateAY = _this6.jy;
						_this6.lastAntiX = _this6.ex;
						_this6.lastAntiY = _this6.ey;
						_this6.penultimateCX = _this6.dx;
						_this6.penultimateCY = _this6.dy;
						_this6.lastClockX = _this6.exPrev;
						_this6.lastClockY = _this6.eyPrev;
						var this56 = _this6.triArr;
						var tri9 = new trilateral_tri_Trilateral(_this6.jx,_this6.jy,_this6.dx,_this6.dy,_this6.ex,_this6.ey,0);
						this56[this56.length] = tri9;
						var this57 = _this6.triArr;
						var tri10 = new trilateral_tri_Trilateral(_this6.jx,_this6.jy,_this6.dx,_this6.dy,_this6.exPrev,_this6.eyPrev,0);
						this57[this57.length] = tri10;
					}
					if(clockWise && _this6.lastClock) {
						_this6.penultimateAX = _this6.jx;
						_this6.penultimateAY = _this6.jy;
						_this6.lastAntiX = _this6.ex;
						_this6.lastAntiY = _this6.ey;
						_this6.penultimateCX = _this6.dx;
						_this6.penultimateCY = _this6.dy;
						_this6.lastClockX = _this6.exPrev;
						_this6.lastClockY = _this6.eyPrev;
						var this58 = _this6.triArr;
						var tri11 = new trilateral_tri_Trilateral(_this6.jx,_this6.jy,_this6.dx,_this6.dy,_this6.ex,_this6.ey,0);
						this58[this58.length] = tri11;
						var this59 = _this6.triArr;
						var tri12 = new trilateral_tri_Trilateral(_this6.jx,_this6.jy,_this6.dx,_this6.dy,_this6.exPrev,_this6.eyPrev,0);
						this59[this59.length] = tri12;
					}
					if(!clockWise && !_this6.lastClock) {
						_this6.penultimateCX = _this6.dx;
						_this6.penultimateCY = _this6.dy;
						_this6.lastClockX = _this6.jx;
						_this6.lastClockY = _this6.jy;
						_this6.penultimateAX = _this6.dxPrev;
						_this6.penultimateAY = _this6.dyPrev;
						_this6.lastAntiX = _this6.ex;
						_this6.lastAntiY = _this6.ey;
						var this60 = _this6.triArr;
						var tri13 = new trilateral_tri_Trilateral(_this6.dxPrev,_this6.dyPrev,_this6.dx,_this6.dy,_this6.jx,_this6.jy,0);
						this60[this60.length] = tri13;
						var this61 = _this6.triArr;
						var tri14 = new trilateral_tri_Trilateral(_this6.dxPrev,_this6.dyPrev,_this6.dx,_this6.dy,_this6.ex,_this6.ey,0);
						this61[this61.length] = tri14;
					}
					if(!clockWise && _this6.lastClock) {
						_this6.penultimateAX = _this6.dxPrev;
						_this6.penultimateAY = _this6.dyPrev;
						_this6.lastAntiX = _this6.ex;
						_this6.lastAntiY = _this6.ey;
						_this6.penultimateCX = _this6.jx;
						_this6.penultimateCY = _this6.jy;
						_this6.lastClockX = _this6.dx;
						_this6.lastClockY = _this6.dy;
						var this62 = _this6.triArr;
						var tri15 = new trilateral_tri_Trilateral(_this6.jx,_this6.jy,_this6.dx,_this6.dy,_this6.ex,_this6.ey,0);
						this62[this62.length] = tri15;
						var this63 = _this6.triArr;
						var tri16 = new trilateral_tri_Trilateral(_this6.dxPrev,_this6.dyPrev,_this6.jx,_this6.jy,_this6.ex,_this6.ey,0);
						this63[this63.length] = tri16;
					}
				}
				if(clockWise) {
					var radius5 = width_ / 2;
					var edgePoly = _this6.pointsClock;
					var t21 = [];
					var this64;
					if(t21 == null) {
						var t22 = [];
						var this65 = t22 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t22;
						this64 = this65;
					} else {
						this64 = t21;
					}
					var this66 = this64;
					var out5 = this66;
					var pi5 = Math.PI;
					var step7 = pi5 * 2 / 36;
					var positive2 = dif5 >= 0;
					var totalSteps2 = Math.ceil(Math.abs(dif5) / step7);
					var step8 = dif5 / totalSteps2;
					var angle2 = theta0;
					var cx5;
					var cy5;
					var bx5 = 0;
					var by5 = 0;
					var p21 = edgePoly.length;
					var count = 0;
					var _g24 = 0;
					var _g111 = totalSteps2 + 1;
					while(_g24 < _g111) {
						var i14 = _g24++;
						cx5 = ax_ + radius5 * Math.sin(angle2);
						cy5 = ay_ + radius5 * Math.cos(angle2);
						if(i14 != 0) {
							var t23 = new trilateral_tri_Trilateral(ax_,ay_,bx5,by5,cx5,cy5);
							out5[out5.length] = t23;
							edgePoly[p21++] = cx5;
							edgePoly[p21++] = cy5;
						}
						angle2 += step8;
						bx5 = cx5;
						by5 = cy5;
					}
					var trilateralArray = out5;
					var this67 = _this6.triArr;
					var _g25 = 0;
					while(_g25 < trilateralArray.length) {
						var t24 = trilateralArray[_g25];
						++_g25;
						this67[this67.length] = t24;
					}
				} else {
					var radius6 = width_ / 2;
					var edgePoly1 = _this6.pointsAnti;
					var t25 = [];
					var this68;
					if(t25 == null) {
						var t26 = [];
						var this69 = t26 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t26;
						this68 = this69;
					} else {
						this68 = t25;
					}
					var this70 = this68;
					var out6 = this70;
					var pi6 = Math.PI;
					var step9 = pi6 * 2 / 36;
					var positive3 = dif5 >= 0;
					var totalSteps3 = Math.ceil(Math.abs(dif5) / step9);
					var step10 = dif5 / totalSteps3;
					var angle3 = theta0;
					var cx6;
					var cy6;
					var bx6 = 0;
					var by6 = 0;
					var p22 = edgePoly1.length;
					var count1 = 0;
					var _g26 = 0;
					var _g112 = totalSteps3 + 1;
					while(_g26 < _g112) {
						var i15 = _g26++;
						cx6 = ax_ + radius6 * Math.sin(angle3);
						cy6 = ay_ + radius6 * Math.cos(angle3);
						if(i15 != 0) {
							var t27 = new trilateral_tri_Trilateral(ax_,ay_,bx6,by6,cx6,cy6);
							out6[out6.length] = t27;
							edgePoly1[p22++] = cx6;
							edgePoly1[p22++] = cy6;
						}
						angle3 += step10;
						bx6 = cx6;
						by6 = cy6;
					}
					var trilateralArray1 = out6;
					var this71 = _this6.triArr;
					var _g27 = 0;
					while(_g27 < trilateralArray1.length) {
						var t28 = trilateralArray1[_g27];
						++_g27;
						this71[this71.length] = t28;
					}
				}
				_this6.kax = _this6.dxPrev;
				_this6.kay = _this6.dyPrev;
				_this6.kbx = _this6.dx;
				_this6.kby = _this6.dy;
				_this6.ncx = _this6.exPrev;
				_this6.ncy = _this6.eyPrev;
				_this6.kcx = _this6.ex;
				_this6.kcy = _this6.ey;
				if(_this6.count != 0) {
					if(clockWise) {
						var this72 = _this6.triArr;
						var tri17 = new trilateral_tri_Trilateral(_this6.ax,_this6.ay,_this6.dxOld,_this6.dyOld,_this6.jx,_this6.jy,0);
						this72[this72.length] = tri17;
						var this73 = _this6.triArr;
						var tri18 = new trilateral_tri_Trilateral(_this6.ax,_this6.ay,_this6.exPrev,_this6.eyPrev,_this6.jx,_this6.jy,0);
						this73[this73.length] = tri18;
					} else {
						var this74 = _this6.triArr;
						var tri19 = new trilateral_tri_Trilateral(_this6.ax,_this6.ay,_this6.exOld,_this6.eyOld,_this6.jx,_this6.jy,0);
						this74[this74.length] = tri19;
						var this75 = _this6.triArr;
						var tri20 = new trilateral_tri_Trilateral(_this6.ax,_this6.ay,_this6.dxPrev,_this6.dyPrev,_this6.jx,_this6.jy,0);
						this75[this75.length] = tri20;
					}
				}
				_this6.jxOld = _this6.jx;
				_this6.jyOld = _this6.jy;
				_this6.lastClock = clockWise;
				_this6.count++;
				var l = path.points.length;
				var p = path.points[l - 1];
				var l2 = p.length;
				p[l2] = x_;
				p[l2 + 1] = y_;
				var d = path.dim[path.dim.length - 1];
				if(x_ < d.minX) {
					d.minX = x_;
				}
				if(x_ > d.maxX) {
					d.maxX = x_;
				}
				if(y_ < d.minY) {
					d.minY = y_;
				}
				if(y_ > d.maxY) {
					d.maxY = y_;
				}
				path.x = x_;
				path.y = y_;
			}
		}
		var this76 = this.triangles;
		var triArr5 = path.trilateralArray;
		var colorID1 = this.appColors.indexOf(789516);
		var tri21;
		var _g28 = 0;
		while(_g28 < triArr5.length) {
			var t29 = triArr5[_g28];
			++_g28;
			if(t29 != null) {
				var t30 = Object.create(trilateral_tri_Triangle.prototype);
				t30.id = 10;
				t30.ax = t29.ax;
				t30.ay = t29.ay;
				t30.bx = t29.bx;
				t30.by = t29.by;
				t30.cx = t29.cx;
				t30.cy = t29.cy;
				t30.mark = t29.mark;
				t30.depth = 0;
				t30.alpha = 1.;
				t30.colorID = colorID1;
				t30.colorA = colorID1;
				t30.colorB = colorID1;
				t30.colorC = colorID1;
				t30.windingAdjusted = t29.windingAdjusted;
				tri21 = t30;
				this76[this76.length] = tri21;
			}
		}
		var spots1 = this.fabrikDemo.joints;
		var width1 = this.lineWidth;
		var path1 = new trilateral_path_Fine(null,null,3);
		path1.width = width1;
		path1.moveTo(spots1[0].x,spots1[0].y);
		var _g29 = 1;
		var _g113 = this.points;
		while(_g29 < _g113) {
			var i16 = _g29++;
			var x_1 = spots1[i16].x;
			var y_1 = spots1[i16].y;
			var repeat1 = path1.x == x_1 && path1.y == y_1;
			if(!repeat1) {
				if(path1.widthFunction != null) {
					path1.width = path1.widthFunction(path1.width,path1.x,path1.x,x_1,y_1);
				}
				var _this7 = path1.contour;
				var ax_1 = path1.x;
				var ay_1 = path1.y;
				var width_1 = path1.width;
				var oldAngle1 = _this7.dx != null ? _this7.angle1 : null;
				_this7.halfA = Math.PI / 2;
				_this7.ax = x_1;
				_this7.ay = y_1;
				_this7.bx = ax_1;
				_this7.by = ay_1;
				_this7.beta = Math.PI / 2 - _this7.halfA;
				_this7.r = width_1 / 2 * Math.cos(_this7.beta);
				_this7.theta = Math.atan2(_this7.ay - _this7.by,_this7.ax - _this7.bx);
				if(_this7.theta > 0) {
					if(_this7.halfA < 0) {
						_this7.angle2 = _this7.theta + _this7.halfA + Math.PI / 2;
						_this7.angle1 = _this7.theta - _this7.halfA;
					} else {
						_this7.angle1 = _this7.theta + _this7.halfA - Math.PI;
						_this7.angle2 = _this7.theta + _this7.halfA;
					}
				} else if(_this7.halfA > 0) {
					_this7.angle1 = _this7.theta + _this7.halfA - Math.PI;
					_this7.angle2 = _this7.theta + _this7.halfA;
				} else {
					_this7.angle2 = _this7.theta + _this7.halfA + Math.PI / 2;
					_this7.angle1 = _this7.theta - _this7.halfA;
				}
				if(_this7.dxPrev != null) {
					_this7.dxOld = _this7.dxPrev;
				}
				if(_this7.dyPrev != null) {
					_this7.dyOld = _this7.dyPrev;
				}
				if(_this7.exPrev != null) {
					_this7.exOld = _this7.exPrev;
				}
				if(_this7.eyPrev != null) {
					_this7.eyOld = _this7.eyPrev;
				}
				if(_this7.dx != null) {
					_this7.dxPrev = _this7.dx;
				}
				if(_this7.dy != null) {
					_this7.dyPrev = _this7.dy;
				}
				if(_this7.ex != null) {
					_this7.exPrev = _this7.ex;
				}
				if(_this7.ey != null) {
					_this7.eyPrev = _this7.ey;
				}
				_this7.dx = _this7.bx + _this7.r * Math.cos(_this7.angle1);
				_this7.dy = _this7.by + _this7.r * Math.sin(_this7.angle1);
				_this7.ex = _this7.bx + _this7.r * Math.cos(_this7.angle2);
				_this7.ey = _this7.by + _this7.r * Math.sin(_this7.angle2);
				_this7.ax = ax_1;
				_this7.ay = ay_1;
				_this7.bx = x_1;
				_this7.by = y_1;
				_this7.theta = Math.atan2(_this7.ay - _this7.by,_this7.ax - _this7.bx);
				if(_this7.theta > 0) {
					if(_this7.halfA < 0) {
						_this7.angle2 = _this7.theta + _this7.halfA + Math.PI / 2;
						_this7.angle1 = _this7.theta - _this7.halfA;
					} else {
						_this7.angle1 = _this7.theta + _this7.halfA - Math.PI;
						_this7.angle2 = _this7.theta + _this7.halfA;
					}
				} else if(_this7.halfA > 0) {
					_this7.angle1 = _this7.theta + _this7.halfA - Math.PI;
					_this7.angle2 = _this7.theta + _this7.halfA;
				} else {
					_this7.angle2 = _this7.theta + _this7.halfA + Math.PI / 2;
					_this7.angle1 = _this7.theta - _this7.halfA;
				}
				if(_this7.dxPrev != null) {
					_this7.dxOld = _this7.dxPrev;
				}
				if(_this7.dyPrev != null) {
					_this7.dyOld = _this7.dyPrev;
				}
				if(_this7.exPrev != null) {
					_this7.exOld = _this7.exPrev;
				}
				if(_this7.eyPrev != null) {
					_this7.eyOld = _this7.eyPrev;
				}
				if(_this7.dx != null) {
					_this7.dxPrev = _this7.dx;
				}
				if(_this7.dy != null) {
					_this7.dyPrev = _this7.dy;
				}
				if(_this7.ex != null) {
					_this7.exPrev = _this7.ex;
				}
				if(_this7.ey != null) {
					_this7.eyPrev = _this7.ey;
				}
				_this7.dx = _this7.bx + _this7.r * Math.cos(_this7.angle1);
				_this7.dy = _this7.by + _this7.r * Math.sin(_this7.angle1);
				_this7.ex = _this7.bx + _this7.r * Math.cos(_this7.angle2);
				_this7.ey = _this7.by + _this7.r * Math.sin(_this7.angle2);
				var x6 = _this7.dxOld - x_1;
				var y6 = _this7.dyOld - y_1;
				var x7 = _this7.exOld - x_1;
				var y7 = _this7.eyOld - y_1;
				var clockWise1 = x6 * x6 + y6 * y6 > x7 * x7 + y7 * y7;
				var theta01;
				var theta16;
				if(clockWise1) {
					theta01 = -Math.atan2(_this7.ay - _this7.dyOld,_this7.ax - _this7.dxOld) - Math.PI / 2;
					theta16 = -Math.atan2(_this7.ay - _this7.eyPrev,_this7.ax - _this7.exPrev) - Math.PI / 2;
				} else {
					theta01 = -Math.atan2(_this7.ay - _this7.eyOld,_this7.ax - _this7.exOld) - Math.PI / 2;
					theta16 = -Math.atan2(_this7.ay - _this7.dyPrev,_this7.ax - _this7.dxPrev) - Math.PI / 2;
				}
				var dif15;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f25;
					if(theta01 >= 0 && theta01 > Math.PI) {
						f25 = theta01;
					} else {
						var a25 = theta01 % (2 * Math.PI);
						f25 = a25 >= 0 ? a25 : a25 + 2 * Math.PI;
					}
					var this77 = f25;
					var za12 = this77;
					var f26;
					if(theta16 >= 0 && theta16 > Math.PI) {
						f26 = theta16;
					} else {
						var a26 = theta16 % (2 * Math.PI);
						f26 = a26 >= 0 ? a26 : a26 + 2 * Math.PI;
					}
					var this78 = f26;
					var zb12 = this78;
					var fa12 = za12;
					var fb12 = zb12;
					var theta17 = Math.abs(theta01 - theta16);
					var clockwise12 = theta01 < theta16;
					var dif16 = clockwise12 ? theta17 : -theta17;
					dif15 = dif16 > 0 ? dif16 : 2 * Math.PI + dif16;
					break;
				case 1:
					var f27;
					if(theta01 >= 0 && theta01 > Math.PI) {
						f27 = theta01;
					} else {
						var a27 = theta01 % (2 * Math.PI);
						f27 = a27 >= 0 ? a27 : a27 + 2 * Math.PI;
					}
					var this79 = f27;
					var za13 = this79;
					var f28;
					if(theta16 >= 0 && theta16 > Math.PI) {
						f28 = theta16;
					} else {
						var a28 = theta16 % (2 * Math.PI);
						f28 = a28 >= 0 ? a28 : a28 + 2 * Math.PI;
					}
					var this80 = f28;
					var zb13 = this80;
					var fa13 = za13;
					var fb13 = zb13;
					var theta18 = Math.abs(theta01 - theta16);
					var clockwise13 = theta01 < theta16;
					var dif17 = clockwise13 ? theta18 : -theta18;
					dif15 = dif17 < 0 ? dif17 : -2 * Math.PI + dif17;
					break;
				case 2:
					var f29;
					if(theta01 >= 0 && theta01 > Math.PI) {
						f29 = theta01;
					} else {
						var a29 = theta01 % (2 * Math.PI);
						f29 = a29 >= 0 ? a29 : a29 + 2 * Math.PI;
					}
					var this81 = f29;
					var za14 = this81;
					var f30;
					if(theta16 >= 0 && theta16 > Math.PI) {
						f30 = theta16;
					} else {
						var a30 = theta16 % (2 * Math.PI);
						f30 = a30 >= 0 ? a30 : a30 + 2 * Math.PI;
					}
					var this82 = f30;
					var zb14 = this82;
					var fa14 = theta01;
					var fb14 = theta16;
					var theta19 = Math.abs(theta01 - theta16);
					var smallest3 = theta19 <= Math.PI;
					var clockwise14 = theta01 < theta16;
					var dif18 = clockwise14 ? theta19 : -theta19;
					dif15 = smallest3 ? dif18 : clockwise14 ? -(2 * Math.PI - theta19) : 2 * Math.PI - theta19;
					break;
				case 3:
					var f31;
					if(theta01 >= 0 && theta01 > Math.PI) {
						f31 = theta01;
					} else {
						var a31 = theta01 % (2 * Math.PI);
						f31 = a31 >= 0 ? a31 : a31 + 2 * Math.PI;
					}
					var this83 = f31;
					var za15 = this83;
					var f32;
					if(theta16 >= 0 && theta16 > Math.PI) {
						f32 = theta16;
					} else {
						var a32 = theta16 % (2 * Math.PI);
						f32 = a32 >= 0 ? a32 : a32 + 2 * Math.PI;
					}
					var this84 = f32;
					var zb15 = this84;
					var fa15 = theta01;
					var fb15 = theta16;
					var theta20 = Math.abs(theta01 - theta16);
					var largest3 = theta20 > Math.PI;
					var clockwise15 = theta01 < theta16;
					var dif19 = clockwise15 ? theta20 : -theta20;
					dif15 = largest3 ? dif19 : clockwise15 ? -(2 * Math.PI - theta20) : 2 * Math.PI - theta20;
					break;
				}
				if(_this7.count != 0) {
					var gamma3 = Math.abs(dif15) / 2;
					var h1 = width_1 / 2 / Math.cos(gamma3);
					var f33;
					if(theta01 <= Math.PI && theta01 > -Math.PI) {
						f33 = theta01;
					} else {
						var a33 = (theta01 + Math.PI) % (2 * Math.PI);
						f33 = a33 >= 0 ? a33 - Math.PI : a33 + Math.PI;
					}
					var this85 = f33;
					var start1 = this85;
					var start21 = start1;
					var delta1 = start21 + dif15 / 2 + Math.PI;
					_this7.jx = _this7.ax + h1 * Math.sin(delta1);
					_this7.jy = _this7.ay + h1 * Math.cos(delta1);
				}
				if(_this7.count == 0 && (_this7.endLine == 1 || _this7.endLine == 3)) {
					var ax1 = _this7.ax;
					var ay1 = _this7.ay;
					var radius7 = width_1 / 2;
					var beta1 = -_this7.angle1 - Math.PI / 2;
					var gamma4 = -_this7.angle1 - Math.PI / 2 + Math.PI;
					var temp1 = [];
					var this86 = _this7.triArr;
					var t31 = [];
					var this87;
					if(t31 == null) {
						var t32 = [];
						var this88 = t32 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t32;
						this87 = this88;
					} else {
						this87 = t31;
					}
					var this89 = this87;
					var out7 = this89;
					var pi7 = Math.PI;
					var step11 = pi7 * 2 / 36;
					var dif20;
					switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
					case 0:
						var f34;
						if(beta1 >= 0 && beta1 > Math.PI) {
							f34 = beta1;
						} else {
							var a34 = beta1 % (2 * Math.PI);
							f34 = a34 >= 0 ? a34 : a34 + 2 * Math.PI;
						}
						var this90 = f34;
						var za16 = this90;
						var f35;
						if(gamma4 >= 0 && gamma4 > Math.PI) {
							f35 = gamma4;
						} else {
							var a35 = gamma4 % (2 * Math.PI);
							f35 = a35 >= 0 ? a35 : a35 + 2 * Math.PI;
						}
						var this91 = f35;
						var zb16 = this91;
						var fa16 = za16;
						var fb16 = zb16;
						var theta21 = Math.abs(beta1 - gamma4);
						var clockwise16 = beta1 < gamma4;
						var dif21 = clockwise16 ? theta21 : -theta21;
						dif20 = dif21 > 0 ? dif21 : 2 * Math.PI + dif21;
						break;
					case 1:
						var f36;
						if(beta1 >= 0 && beta1 > Math.PI) {
							f36 = beta1;
						} else {
							var a36 = beta1 % (2 * Math.PI);
							f36 = a36 >= 0 ? a36 : a36 + 2 * Math.PI;
						}
						var this92 = f36;
						var za17 = this92;
						var f37;
						if(gamma4 >= 0 && gamma4 > Math.PI) {
							f37 = gamma4;
						} else {
							var a37 = gamma4 % (2 * Math.PI);
							f37 = a37 >= 0 ? a37 : a37 + 2 * Math.PI;
						}
						var this93 = f37;
						var zb17 = this93;
						var fa17 = za17;
						var fb17 = zb17;
						var theta22 = Math.abs(beta1 - gamma4);
						var clockwise17 = beta1 < gamma4;
						var dif22 = clockwise17 ? theta22 : -theta22;
						dif20 = dif22 < 0 ? dif22 : -2 * Math.PI + dif22;
						break;
					case 2:
						var f38;
						if(beta1 >= 0 && beta1 > Math.PI) {
							f38 = beta1;
						} else {
							var a38 = beta1 % (2 * Math.PI);
							f38 = a38 >= 0 ? a38 : a38 + 2 * Math.PI;
						}
						var this94 = f38;
						var za18 = this94;
						var f39;
						if(gamma4 >= 0 && gamma4 > Math.PI) {
							f39 = gamma4;
						} else {
							var a39 = gamma4 % (2 * Math.PI);
							f39 = a39 >= 0 ? a39 : a39 + 2 * Math.PI;
						}
						var this95 = f39;
						var zb18 = this95;
						var fa18 = beta1;
						var fb18 = gamma4;
						var theta23 = Math.abs(beta1 - gamma4);
						var smallest4 = theta23 <= Math.PI;
						var clockwise18 = beta1 < gamma4;
						var dif23 = clockwise18 ? theta23 : -theta23;
						dif20 = smallest4 ? dif23 : clockwise18 ? -(2 * Math.PI - theta23) : 2 * Math.PI - theta23;
						break;
					case 3:
						var f40;
						if(beta1 >= 0 && beta1 > Math.PI) {
							f40 = beta1;
						} else {
							var a40 = beta1 % (2 * Math.PI);
							f40 = a40 >= 0 ? a40 : a40 + 2 * Math.PI;
						}
						var this96 = f40;
						var za19 = this96;
						var f41;
						if(gamma4 >= 0 && gamma4 > Math.PI) {
							f41 = gamma4;
						} else {
							var a41 = gamma4 % (2 * Math.PI);
							f41 = a41 >= 0 ? a41 : a41 + 2 * Math.PI;
						}
						var this97 = f41;
						var zb19 = this97;
						var fa19 = beta1;
						var fb19 = gamma4;
						var theta24 = Math.abs(beta1 - gamma4);
						var largest4 = theta24 > Math.PI;
						var clockwise19 = beta1 < gamma4;
						var dif24 = clockwise19 ? theta24 : -theta24;
						dif20 = largest4 ? dif24 : clockwise19 ? -(2 * Math.PI - theta24) : 2 * Math.PI - theta24;
						break;
					}
					var positive4 = dif20 >= 0;
					var totalSteps4 = Math.ceil(Math.abs(dif20) / step11);
					var step12 = dif20 / totalSteps4;
					var angle4 = beta1;
					var cx7;
					var cy7;
					var bx7 = 0;
					var by7 = 0;
					var p23 = temp1.length;
					var _g30 = 0;
					var _g114 = totalSteps4 + 1;
					while(_g30 < _g114) {
						var i17 = _g30++;
						cx7 = ax1 + radius7 * Math.sin(angle4);
						cy7 = ay1 + radius7 * Math.cos(angle4);
						temp1[p23++] = cx7;
						temp1[p23++] = cy7;
						if(i17 != 0) {
							var t33 = new trilateral_tri_Trilateral(ax1,ay1,bx7,by7,cx7,cy7);
							out7[out7.length] = t33;
						}
						angle4 += step12;
						bx7 = cx7;
						by7 = cy7;
					}
					var triArr6 = out7;
					var _g33 = 0;
					while(_g33 < triArr6.length) {
						var t34 = triArr6[_g33];
						++_g33;
						this86[this86.length] = t34;
					}
					var pA1 = _this7.pointsAnti.length;
					var len1 = temp1.length / 2 | 0;
					var p41 = temp1.length / 4 | 0;
					var _g34 = 0;
					var _g115 = p41;
					while(_g34 < _g115) {
						var i18 = _g34++;
						_this7.pointsAnti[pA1++] = temp1[len1 - 2 * i18 + 1];
						_this7.pointsAnti[pA1++] = temp1[len1 - 2 * i18];
					}
					var pC1 = _this7.pointsClock.length;
					var _g210 = 0;
					var _g35 = p41;
					while(_g210 < _g35) {
						var i19 = _g210++;
						_this7.pointsClock[pC1++] = temp1[i19 * 2 + len1 + 1];
						_this7.pointsClock[pC1++] = temp1[i19 * 2 + len1];
					}
				}
				if(_this7.count != 0) {
					_this7.addQuads(clockWise1,width_1);
				}
				_this7.quadIndex = _this7.triArr.length;
				if(_this7.count == 0) {
					_this7.penultimateAX = _this7.dxPrev;
					_this7.penultimateAY = _this7.dyPrev;
					_this7.lastAntiX = _this7.ex;
					_this7.lastAntiY = _this7.ey;
					_this7.penultimateCX = _this7.dx;
					_this7.penultimateCY = _this7.dy;
					_this7.lastClockX = _this7.exPrev;
					_this7.lastClockY = _this7.eyPrev;
					var this98 = _this7.triArr;
					var tri22 = new trilateral_tri_Trilateral(_this7.dxPrev,_this7.dyPrev,_this7.dx,_this7.dy,_this7.ex,_this7.ey,0);
					this98[this98.length] = tri22;
					var this99 = _this7.triArr;
					var tri23 = new trilateral_tri_Trilateral(_this7.dxPrev,_this7.dyPrev,_this7.dx,_this7.dy,_this7.exPrev,_this7.eyPrev,0);
					this99[this99.length] = tri23;
				} else {
					if(clockWise1 && !_this7.lastClock) {
						_this7.penultimateAX = _this7.jx;
						_this7.penultimateAY = _this7.jy;
						_this7.lastAntiX = _this7.ex;
						_this7.lastAntiY = _this7.ey;
						_this7.penultimateCX = _this7.dx;
						_this7.penultimateCY = _this7.dy;
						_this7.lastClockX = _this7.exPrev;
						_this7.lastClockY = _this7.eyPrev;
						var this100 = _this7.triArr;
						var tri24 = new trilateral_tri_Trilateral(_this7.jx,_this7.jy,_this7.dx,_this7.dy,_this7.ex,_this7.ey,0);
						this100[this100.length] = tri24;
						var this101 = _this7.triArr;
						var tri25 = new trilateral_tri_Trilateral(_this7.jx,_this7.jy,_this7.dx,_this7.dy,_this7.exPrev,_this7.eyPrev,0);
						this101[this101.length] = tri25;
					}
					if(clockWise1 && _this7.lastClock) {
						_this7.penultimateAX = _this7.jx;
						_this7.penultimateAY = _this7.jy;
						_this7.lastAntiX = _this7.ex;
						_this7.lastAntiY = _this7.ey;
						_this7.penultimateCX = _this7.dx;
						_this7.penultimateCY = _this7.dy;
						_this7.lastClockX = _this7.exPrev;
						_this7.lastClockY = _this7.eyPrev;
						var this102 = _this7.triArr;
						var tri26 = new trilateral_tri_Trilateral(_this7.jx,_this7.jy,_this7.dx,_this7.dy,_this7.ex,_this7.ey,0);
						this102[this102.length] = tri26;
						var this103 = _this7.triArr;
						var tri27 = new trilateral_tri_Trilateral(_this7.jx,_this7.jy,_this7.dx,_this7.dy,_this7.exPrev,_this7.eyPrev,0);
						this103[this103.length] = tri27;
					}
					if(!clockWise1 && !_this7.lastClock) {
						_this7.penultimateCX = _this7.dx;
						_this7.penultimateCY = _this7.dy;
						_this7.lastClockX = _this7.jx;
						_this7.lastClockY = _this7.jy;
						_this7.penultimateAX = _this7.dxPrev;
						_this7.penultimateAY = _this7.dyPrev;
						_this7.lastAntiX = _this7.ex;
						_this7.lastAntiY = _this7.ey;
						var this104 = _this7.triArr;
						var tri28 = new trilateral_tri_Trilateral(_this7.dxPrev,_this7.dyPrev,_this7.dx,_this7.dy,_this7.jx,_this7.jy,0);
						this104[this104.length] = tri28;
						var this105 = _this7.triArr;
						var tri29 = new trilateral_tri_Trilateral(_this7.dxPrev,_this7.dyPrev,_this7.dx,_this7.dy,_this7.ex,_this7.ey,0);
						this105[this105.length] = tri29;
					}
					if(!clockWise1 && _this7.lastClock) {
						_this7.penultimateAX = _this7.dxPrev;
						_this7.penultimateAY = _this7.dyPrev;
						_this7.lastAntiX = _this7.ex;
						_this7.lastAntiY = _this7.ey;
						_this7.penultimateCX = _this7.jx;
						_this7.penultimateCY = _this7.jy;
						_this7.lastClockX = _this7.dx;
						_this7.lastClockY = _this7.dy;
						var this106 = _this7.triArr;
						var tri30 = new trilateral_tri_Trilateral(_this7.jx,_this7.jy,_this7.dx,_this7.dy,_this7.ex,_this7.ey,0);
						this106[this106.length] = tri30;
						var this107 = _this7.triArr;
						var tri31 = new trilateral_tri_Trilateral(_this7.dxPrev,_this7.dyPrev,_this7.jx,_this7.jy,_this7.ex,_this7.ey,0);
						this107[this107.length] = tri31;
					}
				}
				if(clockWise1) {
					var radius8 = width_1 / 2;
					var edgePoly2 = _this7.pointsClock;
					var t35 = [];
					var this108;
					if(t35 == null) {
						var t36 = [];
						var this109 = t36 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t36;
						this108 = this109;
					} else {
						this108 = t35;
					}
					var this110 = this108;
					var out8 = this110;
					var pi8 = Math.PI;
					var step13 = pi8 * 2 / 36;
					var positive5 = dif15 >= 0;
					var totalSteps5 = Math.ceil(Math.abs(dif15) / step13);
					var step14 = dif15 / totalSteps5;
					var angle5 = theta01;
					var cx8;
					var cy8;
					var bx8 = 0;
					var by8 = 0;
					var p24 = edgePoly2.length;
					var count2 = 0;
					var _g36 = 0;
					var _g116 = totalSteps5 + 1;
					while(_g36 < _g116) {
						var i20 = _g36++;
						cx8 = ax_1 + radius8 * Math.sin(angle5);
						cy8 = ay_1 + radius8 * Math.cos(angle5);
						if(i20 != 0) {
							var t37 = new trilateral_tri_Trilateral(ax_1,ay_1,bx8,by8,cx8,cy8);
							out8[out8.length] = t37;
							edgePoly2[p24++] = cx8;
							edgePoly2[p24++] = cy8;
						}
						angle5 += step14;
						bx8 = cx8;
						by8 = cy8;
					}
					var trilateralArray2 = out8;
					var this111 = _this7.triArr;
					var _g37 = 0;
					while(_g37 < trilateralArray2.length) {
						var t38 = trilateralArray2[_g37];
						++_g37;
						this111[this111.length] = t38;
					}
				} else {
					var radius9 = width_1 / 2;
					var edgePoly3 = _this7.pointsAnti;
					var t39 = [];
					var this112;
					if(t39 == null) {
						var t40 = [];
						var this113 = t40 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t40;
						this112 = this113;
					} else {
						this112 = t39;
					}
					var this114 = this112;
					var out9 = this114;
					var pi9 = Math.PI;
					var step15 = pi9 * 2 / 36;
					var positive6 = dif15 >= 0;
					var totalSteps6 = Math.ceil(Math.abs(dif15) / step15);
					var step16 = dif15 / totalSteps6;
					var angle6 = theta01;
					var cx9;
					var cy9;
					var bx9 = 0;
					var by9 = 0;
					var p25 = edgePoly3.length;
					var count3 = 0;
					var _g38 = 0;
					var _g117 = totalSteps6 + 1;
					while(_g38 < _g117) {
						var i21 = _g38++;
						cx9 = ax_1 + radius9 * Math.sin(angle6);
						cy9 = ay_1 + radius9 * Math.cos(angle6);
						if(i21 != 0) {
							var t41 = new trilateral_tri_Trilateral(ax_1,ay_1,bx9,by9,cx9,cy9);
							out9[out9.length] = t41;
							edgePoly3[p25++] = cx9;
							edgePoly3[p25++] = cy9;
						}
						angle6 += step16;
						bx9 = cx9;
						by9 = cy9;
					}
					var trilateralArray3 = out9;
					var this115 = _this7.triArr;
					var _g39 = 0;
					while(_g39 < trilateralArray3.length) {
						var t42 = trilateralArray3[_g39];
						++_g39;
						this115[this115.length] = t42;
					}
				}
				_this7.kax = _this7.dxPrev;
				_this7.kay = _this7.dyPrev;
				_this7.kbx = _this7.dx;
				_this7.kby = _this7.dy;
				_this7.ncx = _this7.exPrev;
				_this7.ncy = _this7.eyPrev;
				_this7.kcx = _this7.ex;
				_this7.kcy = _this7.ey;
				if(_this7.count != 0) {
					if(clockWise1) {
						var this116 = _this7.triArr;
						var tri32 = new trilateral_tri_Trilateral(_this7.ax,_this7.ay,_this7.dxOld,_this7.dyOld,_this7.jx,_this7.jy,0);
						this116[this116.length] = tri32;
						var this117 = _this7.triArr;
						var tri33 = new trilateral_tri_Trilateral(_this7.ax,_this7.ay,_this7.exPrev,_this7.eyPrev,_this7.jx,_this7.jy,0);
						this117[this117.length] = tri33;
					} else {
						var this118 = _this7.triArr;
						var tri34 = new trilateral_tri_Trilateral(_this7.ax,_this7.ay,_this7.exOld,_this7.eyOld,_this7.jx,_this7.jy,0);
						this118[this118.length] = tri34;
						var this119 = _this7.triArr;
						var tri35 = new trilateral_tri_Trilateral(_this7.ax,_this7.ay,_this7.dxPrev,_this7.dyPrev,_this7.jx,_this7.jy,0);
						this119[this119.length] = tri35;
					}
				}
				_this7.jxOld = _this7.jx;
				_this7.jyOld = _this7.jy;
				_this7.lastClock = clockWise1;
				_this7.count++;
				var l1 = path1.points.length;
				var p1 = path1.points[l1 - 1];
				var l21 = p1.length;
				p1[l21] = x_1;
				p1[l21 + 1] = y_1;
				var d1 = path1.dim[path1.dim.length - 1];
				if(x_1 < d1.minX) {
					d1.minX = x_1;
				}
				if(x_1 > d1.maxX) {
					d1.maxX = x_1;
				}
				if(y_1 < d1.minY) {
					d1.minY = y_1;
				}
				if(y_1 > d1.maxY) {
					d1.maxY = y_1;
				}
				path1.x = x_1;
				path1.y = y_1;
			}
		}
		var this120 = this.triangles;
		var triArr7 = path1.trilateralArray;
		var colorID2 = this.appColors.indexOf(4473924);
		var tri36;
		var _g40 = 0;
		while(_g40 < triArr7.length) {
			var t43 = triArr7[_g40];
			++_g40;
			if(t43 != null) {
				var t44 = Object.create(trilateral_tri_Triangle.prototype);
				t44.id = 11;
				t44.ax = t43.ax;
				t44.ay = t43.ay;
				t44.bx = t43.bx;
				t44.by = t43.by;
				t44.cx = t43.cx;
				t44.cy = t43.cy;
				t44.mark = t43.mark;
				t44.depth = 0;
				t44.alpha = 1.;
				t44.colorID = colorID2;
				t44.colorA = colorID2;
				t44.colorB = colorID2;
				t44.colorC = colorID2;
				t44.windingAdjusted = t43.windingAdjusted;
				tri36 = t44;
				this120[this120.length] = tri36;
			}
		}
		var _gthis2 = this;
		var jointRender2 = function(i22,joint5) {
			var col = _gthis2.appColors.indexOf(16711680) + i22;
			if(col > 7) {
				col -= 7;
			}
			var _this8 = _gthis2.shapes;
			var x8 = joint5.x;
			var y8 = joint5.y;
			var radius10 = _gthis2.circleSize;
			var this121 = _this8.triangles;
			var id3 = _this8.refCount++;
			var t45 = [];
			var this122;
			if(t45 == null) {
				var t46 = [];
				var this123 = t46 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t46;
				this122 = this123;
			} else {
				this122 = t45;
			}
			var this124 = this122;
			var out10 = this124;
			var pi10 = Math.PI;
			var theta25 = pi10 / 2;
			var step17 = pi10 * 2 / 36;
			var bx10;
			var by10;
			var cx10;
			var cy10;
			var _g41 = 0;
			var _g118 = 36;
			while(_g41 < _g118) {
				var i23 = _g41++;
				bx10 = x8 + radius10 * Math.sin(theta25);
				by10 = y8 + radius10 * Math.cos(theta25);
				theta25 += step17;
				cx10 = x8 + radius10 * Math.sin(theta25);
				cy10 = y8 + radius10 * Math.cos(theta25);
				var tri37 = new trilateral_tri_Trilateral(x8,y8,bx10,by10,cx10,cy10);
				out10[out10.length] = tri37;
			}
			var triArr8 = out10;
			var tri38;
			var _g42 = 0;
			while(_g42 < triArr8.length) {
				var t47 = triArr8[_g42];
				++_g42;
				if(t47 != null) {
					var t48 = Object.create(trilateral_tri_Triangle.prototype);
					t48.id = id3;
					t48.ax = t47.ax;
					t48.ay = t47.ay;
					t48.bx = t47.bx;
					t48.by = t47.by;
					t48.cx = t47.cx;
					t48.cy = t47.cy;
					t48.mark = t47.mark;
					t48.depth = 0;
					t48.alpha = 1.;
					t48.colorID = col;
					t48.colorA = col;
					t48.colorB = col;
					t48.colorC = col;
					t48.windingAdjusted = t47.windingAdjusted;
					tri38 = t48;
					this121[this121.length] = tri38;
				}
			}
			return _this8.refCount - 1;
		};
		var _this9 = this.collisionDemo;
		var anchor6 = this.mousePos;
		var joint6;
		var mouseEdge = 2;
		var radius11 = _this9.distance + mouseEdge + _this9.circleSize / 2;
		var _g43 = 0;
		var _g119 = _this9.points;
		while(_g43 < _g119) {
			var i24 = _g43++;
			joint6 = _this9.joints[i24];
			var toNext_x1 = anchor6.x - joint6.x;
			var toNext_y1 = anchor6.y - joint6.y;
			var toNext_z1 = anchor6.z - joint6.z;
			var toNext_w1 = anchor6.w - joint6.w;
			if(Math.sqrt(toNext_x1 * toNext_x1 + toNext_y1 * toNext_y1 + toNext_z1 * toNext_z1 + toNext_w1 * toNext_w1) < radius11) {
				var currentLength4 = Math.sqrt(toNext_x1 * toNext_x1 + toNext_y1 * toNext_y1 + toNext_z1 * toNext_z1 + toNext_w1 * toNext_w1);
				if(currentLength4 != 0.) {
					var mul4 = radius11 / currentLength4;
					toNext_x1 *= mul4;
					toNext_y1 *= mul4;
					toNext_z1 *= mul4;
					toNext_w1 *= mul4;
					var tmp4 = toNext_x1 * toNext_x1 + toNext_y1 * toNext_y1 + toNext_z1 * toNext_z1 + toNext_w1 * toNext_w1;
				}
				var a_x8 = anchor6.x - joint6.x;
				var a_y8 = anchor6.y - joint6.y;
				var a_z8 = anchor6.z - joint6.z;
				var a_w8 = anchor6.w - joint6.w;
				var offset_x = a_x8 - toNext_x1;
				var offset_y = a_y8 - toNext_y1;
				var offset_z = a_z8 - toNext_z1;
				var offset_w = a_w8 - toNext_w1;
				var this125 = { x : joint6.x + offset_x, y : joint6.y + offset_y, z : joint6.z + offset_z, w : joint6.w + offset_w};
				_this9.joints[i24] = this125;
			}
		}
		var other;
		var _g211 = 0;
		var _g310 = _this9.points;
		while(_g211 < _g310) {
			var i25 = _g211++;
			var _g212 = i25;
			var _g311 = _this9.points;
			while(_g212 < _g311) {
				var j1 = _g212++;
				joint6 = _this9.joints[i25];
				other = _this9.joints[j1];
				var toNext_x2 = other.x - joint6.x;
				var toNext_y2 = other.y - joint6.y;
				var toNext_z2 = other.z - joint6.z;
				var toNext_w2 = other.w - joint6.w;
				if(Math.sqrt(toNext_x2 * toNext_x2 + toNext_y2 * toNext_y2 + toNext_z2 * toNext_z2 + toNext_w2 * toNext_w2) < _this9.circleSize * 2) {
					var currentLength5 = Math.sqrt(toNext_x2 * toNext_x2 + toNext_y2 * toNext_y2 + toNext_z2 * toNext_z2 + toNext_w2 * toNext_w2);
					if(currentLength5 != 0.) {
						var mul5 = _this9.circleSize * 2 / currentLength5;
						toNext_x2 *= mul5;
						toNext_y2 *= mul5;
						toNext_z2 *= mul5;
						toNext_w2 *= mul5;
						var tmp5 = toNext_x2 * toNext_x2 + toNext_y2 * toNext_y2 + toNext_z2 * toNext_z2 + toNext_w2 * toNext_w2;
					}
					var a_x9 = other.x - joint6.x;
					var a_y9 = other.y - joint6.y;
					var a_z9 = other.z - joint6.z;
					var a_w9 = other.w - joint6.w;
					var b_x = toNext_x2 * 0.5;
					var b_y = toNext_y2 * 0.5;
					var b_z = toNext_z2 * 0.5;
					var b_w = toNext_w2 * 0.5;
					var offset_x1 = a_x9 - b_x;
					var offset_y1 = a_y9 - b_y;
					var offset_z1 = a_z9 - b_z;
					var offset_w1 = a_w9 - b_w;
					var this126 = { x : joint6.x + offset_x1, y : joint6.y + offset_y1, z : joint6.z + offset_z1, w : joint6.w + offset_w1};
					_this9.joints[i25] = this126;
					var this127 = { x : other.x - offset_x1, y : other.y - offset_y1, z : other.z - offset_z1, w : other.w - offset_w1};
					_this9.joints[j1] = this127;
				}
			}
		}
		var _g44 = 0;
		var _g51 = _this9.points;
		while(_g44 < _g51) {
			var i26 = _g44++;
			jointRender2(i26,_this9.joints[i26]);
		}
		var tri39;
		var s = 1.;
		var ox = 0.;
		var oy = 0.;
		var g = this.surface;
		g.beginFill(1579032,1.);
		g.lineStyle(0.,0,0.);
		g.drawRect(1,1,this.width - 2,this.height - 2);
		g.endFill();
		var triangles = this.triangles;
		var triangleColors = this.appColors;
		var _g45 = 0;
		var _g120 = triangles.length;
		while(_g45 < _g120) {
			var i27 = _g45++;
			tri39 = triangles[i27];
			if(tri39.mark != 0) {
				g.beginFill(triangleColors[tri39.mark]);
			} else {
				g.beginFill(triangleColors[tri39.colorID]);
				g.lineStyle(0.,triangleColors[tri39.colorID],1.);
			}
			g.drawTri([ox + tri39.ax * s,oy + tri39.ay * s,ox + tri39.bx * s,oy + tri39.by * s,ox + tri39.cx * s,oy + tri39.cy * s]);
			g.endFill();
		}
	}
};
Math.__name__ = true;
var StringTools = function() { };
StringTools.__name__ = true;
StringTools.hex = function(n,digits) {
	var s = "";
	var hexChars = "0123456789ABCDEF";
	while(true) {
		s = hexChars.charAt(n & 15) + s;
		n >>>= 4;
		if(!(n > 0)) {
			break;
		}
	}
	if(digits != null) {
		while(s.length < digits) s = "0" + s;
	}
	return s;
};
var constraints_demo_Chain = function(x,y,points_,distance_) {
	this.joints = [];
	this.distance = distance_;
	this.points = points_;
	var _g = 0;
	var _g1 = this.points;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { x : x + i * this.distance, y : y, z : 0., w : 1.};
		this.joints[i] = this1;
	}
};
constraints_demo_Chain.__name__ = true;
var constraints_demo_Collision = function(x_,y_,points_,circleSize_,collisionArea,distance_) {
	this.joints = [];
	this.x = x_;
	this.y = y_;
	this.distance = distance_;
	this.points = points_;
	this.circleSize = circleSize_;
	var _g = 0;
	var _g1 = this.points;
	while(_g < _g1) {
		var i = _g++;
		var x0 = this.x / 2 + collisionArea * Math.random();
		var y0 = this.y / 2 + collisionArea * Math.random();
		var this1 = { x : x0, y : y0, z : 0., w : 1.};
		this.joints[i] = this1;
	}
};
constraints_demo_Collision.__name__ = true;
var constraints_demo_Fabrik = function(x_,y_,points_,distance_) {
	this.joints = [];
	this.x = x_;
	this.y = y_;
	this.distance = distance_;
	this.points = points_;
	var _g = 0;
	var _g1 = this.points;
	while(_g < _g1) {
		var i = _g++;
		var this1 = { x : this.x + i * this.distance, y : this.y, z : 0., w : 1.};
		this.joints[i] = this1;
	}
};
constraints_demo_Fabrik.__name__ = true;
var constraints_demo_Inner = function(x,y,distance_) {
	var this1 = { x : x, y : y, z : 0., w : 1.};
	this.point = this1;
	this.distance = distance_;
};
constraints_demo_Inner.__name__ = true;
var htmlHelper_tools_AnimateTimer = function() { };
htmlHelper_tools_AnimateTimer.__name__ = true;
htmlHelper_tools_AnimateTimer.loop = function(tim) {
	window.requestAnimationFrame(htmlHelper_tools_AnimateTimer.loop);
	if(htmlHelper_tools_AnimateTimer.onFrame != null) {
		htmlHelper_tools_AnimateTimer.onFrame(htmlHelper_tools_AnimateTimer.counter);
	}
	htmlHelper_tools_AnimateTimer.counter++;
	return true;
};
var js__$Boot_HaxeError = function(val) {
	Error.call(this);
	this.val = val;
	if(Error.captureStackTrace) {
		Error.captureStackTrace(this,js__$Boot_HaxeError);
	}
};
js__$Boot_HaxeError.__name__ = true;
js__$Boot_HaxeError.__super__ = Error;
js__$Boot_HaxeError.prototype = $extend(Error.prototype,{
});
var js_Boot = function() { };
js_Boot.__name__ = true;
js_Boot.__string_rec = function(o,s) {
	if(o == null) {
		return "null";
	}
	if(s.length >= 5) {
		return "<...>";
	}
	var t = typeof(o);
	if(t == "function" && (o.__name__ || o.__ename__)) {
		t = "object";
	}
	switch(t) {
	case "function":
		return "<function>";
	case "object":
		if(o.__enum__) {
			var e = $hxEnums[o.__enum__];
			var n = e.__constructs__[o._hx_index];
			var con = e[n];
			if(con.__params__) {
				s += "\t";
				var tmp = n + "(";
				var _g = [];
				var _g1 = 0;
				var _g2 = con.__params__;
				while(_g1 < _g2.length) {
					var p = _g2[_g1];
					++_g1;
					_g.push(js_Boot.__string_rec(o[p],s));
				}
				return tmp + _g.join(",") + ")";
			} else {
				return n;
			}
		}
		if(((o) instanceof Array)) {
			var l = o.length;
			var i;
			var str = "[";
			s += "\t";
			var _g3 = 0;
			var _g11 = l;
			while(_g3 < _g11) {
				var i1 = _g3++;
				str += (i1 > 0 ? "," : "") + js_Boot.__string_rec(o[i1],s);
			}
			str += "]";
			return str;
		}
		var tostr;
		try {
			tostr = o.toString;
		} catch( e1 ) {
			var e2 = ((e1) instanceof js__$Boot_HaxeError) ? e1.val : e1;
			return "???";
		}
		if(tostr != null && tostr != Object.toString && typeof(tostr) == "function") {
			var s2 = o.toString();
			if(s2 != "[object Object]") {
				return s2;
			}
		}
		var k = null;
		var str1 = "{\n";
		s += "\t";
		var hasp = o.hasOwnProperty != null;
		for( var k in o ) {
		if(hasp && !o.hasOwnProperty(k)) {
			continue;
		}
		if(k == "prototype" || k == "__class__" || k == "__super__" || k == "__interfaces__" || k == "__properties__") {
			continue;
		}
		if(str1.length != 2) {
			str1 += ", \n";
		}
		str1 += s + k + " : " + js_Boot.__string_rec(o[k],s);
		}
		s = s.substring(1);
		str1 += "\n" + s + "}";
		return str1;
	case "string":
		return o;
	default:
		return String(o);
	}
};
var justDrawing_Surface = function(graphics_) {
	this.inFill = false;
	this.graphics = graphics_;
	this.inFill = false;
};
justDrawing_Surface.__name__ = true;
justDrawing_Surface.prototype = {
	lineStyle: function(thick,color,alpha) {
		if(alpha == null) {
			alpha = 1.;
		}
		this.thickness = thick;
		this.lineColor = color;
		this.lineAlpha = alpha;
		this.graphics.lineWidth = thick;
		var col = this.lineColor;
		var alpha1 = this.lineAlpha;
		var str;
		if(alpha1 != null && alpha1 != 1.0) {
			var r = col >> 16 & 255;
			var g = col >> 8 & 255;
			var b = col & 255;
			str = "rgba(" + r + "," + g + "," + b + "," + alpha1 + ")";
		} else {
			str = "#" + StringTools.hex(col,6);
		}
		this.graphics.strokeStyle = str;
	}
	,beginFill: function(color,alpha) {
		this.fillColor = color;
		this.fillAlpha = alpha;
		this.inFill = true;
		var col = this.fillColor;
		var alpha1 = this.fillAlpha;
		var str;
		if(alpha1 != null && alpha1 != 1.0) {
			var r = col >> 16 & 255;
			var g = col >> 8 & 255;
			var b = col & 255;
			str = "rgba(" + r + "," + g + "," + b + "," + alpha1 + ")";
		} else {
			str = "#" + StringTools.hex(col,6);
		}
		this.graphics.fillStyle = str;
		this.graphics.beginPath();
	}
	,endFill: function() {
		var wasFill = this.inFill;
		this.inFill = false;
		this.graphics.stroke();
		this.graphics.closePath();
		this.graphics.fill();
	}
	,drawRect: function(x,y,width,height) {
		this.graphics.beginPath();
		this.graphics.moveTo(x,y);
		this.graphics.lineTo(x + width,y);
		this.graphics.lineTo(x + width,y + height);
		this.graphics.lineTo(x,y + height);
		this.graphics.stroke();
		this.graphics.closePath();
	}
	,drawTri: function(points) {
		this.graphics.beginPath();
		var i = 0;
		while(i < points.length) {
			if(i == 0) {
				this.graphics.moveTo(points[i],points[i + 1]);
			} else {
				this.graphics.lineTo(points[i],points[i + 1]);
			}
			i += 2;
		}
		this.graphics.stroke();
		this.graphics.closePath();
	}
};
var trilateral_angle_DifferencePreference = $hxEnums["trilateral.angle.DifferencePreference"] = { __ename__ : true, __constructs__ : ["CLOCKWISE","ANTICLOCKWISE","SMALL","LARGE"]
	,CLOCKWISE: {_hx_index:0,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,ANTICLOCKWISE: {_hx_index:1,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,SMALL: {_hx_index:2,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
	,LARGE: {_hx_index:3,__enum__:"trilateral.angle.DifferencePreference",toString:$estr}
};
var trilateral_geom_Contour = function(triArr_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.count = 0;
	this.pointsAnti = [];
	this.pointsClock = [];
	this.triArr = triArr_;
	this.endLine = endLine_;
};
trilateral_geom_Contour.__name__ = true;
trilateral_geom_Contour.prototype = {
	reset: function() {
		this.angleA = 0;
		this.count = 0;
		this.kax = 0;
		this.kay = 0;
		this.kbx = 0;
		this.kby = 0;
		this.kcx = 0;
		this.kcy = 0;
		this.ncx = 0;
		this.ncy = 0;
		this.ax = 0;
		this.ay = 0;
		this.bx = 0;
		this.by = 0;
		this.cx = 0;
		this.cy = 0;
		this.dx = null;
		this.dy = null;
		this.ex = null;
		this.ey = null;
		this.pointsClock.length = 0;
		this.pointsAnti.length = 0;
	}
	,endEdges: function() {
		var pC = this.pointsClock.length;
		var pA = this.pointsAnti.length;
		this.pointsClock[pC++] = this.penultimateCX;
		this.pointsClock[pC++] = this.penultimateCY;
		this.pointsClock[pC++] = this.lastClockX;
		this.pointsClock[pC++] = this.lastClockY;
		this.pointsAnti[pA++] = this.penultimateAX;
		this.pointsAnti[pA++] = this.penultimateAY;
		this.pointsAnti[pA++] = this.lastAntiX;
		this.pointsAnti[pA++] = this.lastAntiY;
	}
	,addQuads: function(clockWise,width_) {
		var pC = 0;
		var pA = 0;
		if(clockWise && !this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jxOld;
				this.pointsClock[pC++] = this.jyOld;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jxOld,this.jyOld);
			}
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
		}
		if(clockWise && this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				this.pointsAnti[pA++] = this.kbx;
				this.pointsAnti[pA++] = this.kby;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.kax;
				this.pointsClock[pC++] = this.kay;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.kbx,this.kby,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jxOld;
				this.pointsAnti[pA++] = this.jyOld;
				this.pointsAnti[pA++] = this.jx;
				this.pointsAnti[pA++] = this.jy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.pointsClock[pC++] = this.kbx;
				this.pointsClock[pC++] = this.kby;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.jx,this.jy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.kbx,this.kby,this.ncx,this.ncy);
			}
		}
		if(!clockWise && !this.lastClock) {
			this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jxOld;
				this.pointsClock[pC++] = this.jyOld;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.jxOld,this.jyOld);
			}
		}
		if(!clockWise && this.lastClock) {
			if(this.count == 1) {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.kay;
				this.pointsAnti[pA++] = this.kax;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.kax,this.kay,this.jx,this.jy,this.ncx,this.ncy);
			} else {
				pA = this.pointsAnti.length;
				this.pointsAnti[pA++] = this.jxOld;
				this.pointsAnti[pA++] = this.jyOld;
				this.pointsAnti[pA++] = this.kcx;
				this.pointsAnti[pA++] = this.kcy;
				pC = this.pointsClock.length;
				this.pointsClock[pC++] = this.jx;
				this.pointsClock[pC++] = this.jy;
				this.pointsClock[pC++] = this.ncx;
				this.pointsClock[pC++] = this.ncy;
				this.triArr[this.quadIndex] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.kcx,this.kcy);
				this.triArr[this.quadIndex + 1] = new trilateral_tri_Trilateral(this.jxOld,this.jyOld,this.jx,this.jy,this.ncx,this.ncy);
			}
		}
	}
};
var trilateral_justPath_IPathContext = function() { };
trilateral_justPath_IPathContext.__name__ = true;
var trilateral_path_Base = function(contour_,trilateralArray_,endLine_) {
	if(endLine_ == null) {
		endLine_ = 0;
	}
	this.width = 0.01;
	this.y = 0.;
	this.x = 0.;
	var tmp;
	if(trilateralArray_ == null) {
		var t = [];
		var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
		var this2 = this1;
		tmp = this2;
	} else {
		tmp = trilateralArray_;
	}
	this.trilateralArray = tmp;
	this.contour = contour_ == null ? new trilateral_geom_Contour(this.trilateralArray,endLine_) : contour_;
	this.endLine = endLine_;
	this.points = [];
	this.pointsClock = [];
	this.pointsAnti = [];
	this.points[0] = [];
	this.dim = [];
};
trilateral_path_Base.__name__ = true;
trilateral_path_Base.__interfaces__ = [trilateral_justPath_IPathContext];
trilateral_path_Base.prototype = {
	moveTo: function(x_,y_) {
		if(this.endLine == 2 || this.endLine == 3) {
			var _this = this.contour;
			var width_ = this.width;
			_this.endEdges();
			if(_this.count != 0) {
				var ax = _this.bx;
				var ay = _this.by;
				var radius = width_ / 2;
				var beta = -_this.angle1 - Math.PI / 2;
				var gamma = -_this.angle1 - Math.PI / 2 - Math.PI;
				var temp = [];
				var this1 = _this.triArr;
				var t = [];
				var this2;
				if(t == null) {
					var t1 = [];
					var this3 = t1 == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t1;
					this2 = this3;
				} else {
					this2 = t;
				}
				var this4 = this2;
				var out = this4;
				var pi = Math.PI;
				var step = pi * 2 / 36;
				var dif;
				switch(trilateral_angle_DifferencePreference.SMALL._hx_index) {
				case 0:
					var f;
					if(beta >= 0 && beta > Math.PI) {
						f = beta;
					} else {
						var a = beta % (2 * Math.PI);
						f = a >= 0 ? a : a + 2 * Math.PI;
					}
					var this5 = f;
					var za = this5;
					var f1;
					if(gamma >= 0 && gamma > Math.PI) {
						f1 = gamma;
					} else {
						var a1 = gamma % (2 * Math.PI);
						f1 = a1 >= 0 ? a1 : a1 + 2 * Math.PI;
					}
					var this6 = f1;
					var zb = this6;
					var fa = za;
					var fb = zb;
					var theta = Math.abs(beta - gamma);
					var clockwise = beta < gamma;
					var dif1 = clockwise ? theta : -theta;
					dif = dif1 > 0 ? dif1 : 2 * Math.PI + dif1;
					break;
				case 1:
					var f2;
					if(beta >= 0 && beta > Math.PI) {
						f2 = beta;
					} else {
						var a2 = beta % (2 * Math.PI);
						f2 = a2 >= 0 ? a2 : a2 + 2 * Math.PI;
					}
					var this7 = f2;
					var za1 = this7;
					var f3;
					if(gamma >= 0 && gamma > Math.PI) {
						f3 = gamma;
					} else {
						var a3 = gamma % (2 * Math.PI);
						f3 = a3 >= 0 ? a3 : a3 + 2 * Math.PI;
					}
					var this8 = f3;
					var zb1 = this8;
					var fa1 = za1;
					var fb1 = zb1;
					var theta1 = Math.abs(beta - gamma);
					var clockwise1 = beta < gamma;
					var dif2 = clockwise1 ? theta1 : -theta1;
					dif = dif2 < 0 ? dif2 : -2 * Math.PI + dif2;
					break;
				case 2:
					var f4;
					if(beta >= 0 && beta > Math.PI) {
						f4 = beta;
					} else {
						var a4 = beta % (2 * Math.PI);
						f4 = a4 >= 0 ? a4 : a4 + 2 * Math.PI;
					}
					var this9 = f4;
					var za2 = this9;
					var f5;
					if(gamma >= 0 && gamma > Math.PI) {
						f5 = gamma;
					} else {
						var a5 = gamma % (2 * Math.PI);
						f5 = a5 >= 0 ? a5 : a5 + 2 * Math.PI;
					}
					var this10 = f5;
					var zb2 = this10;
					var fa2 = beta;
					var fb2 = gamma;
					var theta2 = Math.abs(beta - gamma);
					var smallest = theta2 <= Math.PI;
					var clockwise2 = beta < gamma;
					var dif3 = clockwise2 ? theta2 : -theta2;
					dif = smallest ? dif3 : clockwise2 ? -(2 * Math.PI - theta2) : 2 * Math.PI - theta2;
					break;
				case 3:
					var f6;
					if(beta >= 0 && beta > Math.PI) {
						f6 = beta;
					} else {
						var a6 = beta % (2 * Math.PI);
						f6 = a6 >= 0 ? a6 : a6 + 2 * Math.PI;
					}
					var this11 = f6;
					var za3 = this11;
					var f7;
					if(gamma >= 0 && gamma > Math.PI) {
						f7 = gamma;
					} else {
						var a7 = gamma % (2 * Math.PI);
						f7 = a7 >= 0 ? a7 : a7 + 2 * Math.PI;
					}
					var this12 = f7;
					var zb3 = this12;
					var fa3 = beta;
					var fb3 = gamma;
					var theta3 = Math.abs(beta - gamma);
					var largest = theta3 > Math.PI;
					var clockwise3 = beta < gamma;
					var dif4 = clockwise3 ? theta3 : -theta3;
					dif = largest ? dif4 : clockwise3 ? -(2 * Math.PI - theta3) : 2 * Math.PI - theta3;
					break;
				}
				var positive = dif >= 0;
				var totalSteps = Math.ceil(Math.abs(dif) / step);
				var step1 = dif / totalSteps;
				var angle = beta;
				var cx;
				var cy;
				var bx = 0;
				var by = 0;
				var p2 = temp.length;
				var _g = 0;
				var _g1 = totalSteps + 1;
				while(_g < _g1) {
					var i = _g++;
					cx = ax + radius * Math.sin(angle);
					cy = ay + radius * Math.cos(angle);
					temp[p2++] = cx;
					temp[p2++] = cy;
					if(i != 0) {
						var t2 = new trilateral_tri_Trilateral(ax,ay,bx,by,cx,cy);
						out[out.length] = t2;
					}
					angle += step1;
					bx = cx;
					by = cy;
				}
				var triArr = out;
				var _g2 = 0;
				while(_g2 < triArr.length) {
					var t3 = triArr[_g2];
					++_g2;
					this1[this1.length] = t3;
				}
				var pA = _this.pointsAnti.length;
				var len = temp.length / 2 | 0;
				var _g3 = 0;
				var _g11 = len + 2;
				while(_g3 < _g11) {
					var i1 = _g3++;
					_this.pointsAnti[pA++] = temp[i1];
				}
				var pC = _this.pointsClock.length;
				var _g21 = 1;
				var _g31 = len / 2 + 1 | 0;
				while(_g21 < _g31) {
					var i2 = _g21++;
					_this.pointsClock[pC++] = temp[temp.length - 2 * i2];
					_this.pointsClock[pC++] = temp[temp.length - 2 * i2 - 1];
				}
			}
		}
		this.x = x_;
		this.y = y_;
		var l = this.points.length;
		this.points[l] = [];
		this.points[l][0] = x_;
		this.points[l][1] = y_;
		this.pointsClock[this.pointsClock.length] = this.contour.pointsClock.slice();
		this.pointsAnti[this.pointsAnti.length] = this.contour.pointsAnti.slice();
		this.dim[this.dim.length] = { minX : Infinity, maxX : -Infinity, minY : Infinity, maxY : -Infinity};
		var d = this.dim[this.dim.length - 1];
		if(x_ < d.minX) {
			d.minX = x_;
		}
		if(x_ > d.maxX) {
			d.maxX = x_;
		}
		if(y_ < d.minY) {
			d.minY = y_;
		}
		if(y_ > d.maxY) {
			d.maxY = y_;
		}
		this.contour.reset();
	}
};
var trilateral_path_Fine = function(contour_,trilateralArray_,endLine_) {
	trilateral_path_Base.call(this,contour_,trilateralArray_,endLine_);
};
trilateral_path_Fine.__name__ = true;
trilateral_path_Fine.__super__ = trilateral_path_Base;
trilateral_path_Fine.prototype = $extend(trilateral_path_Base.prototype,{
});
var trilateral_polys_Shapes = function(triangleArray_,colors_) {
	this.refCount = 0;
	this.triangles = triangleArray_;
	this.colors = colors_;
};
trilateral_polys_Shapes.__name__ = true;
var trilateral_tri_Trilateral = function(ax_,ay_,bx_,by_,cx_,cy_,mark_) {
	if(mark_ == null) {
		mark_ = 0;
	}
	this.mark = 0;
	this.ax = ax_;
	this.ay = ay_;
	this.bx = bx_;
	this.by = by_;
	this.cx = cx_;
	this.cy = cy_;
	this.windingAdjusted = this.adjustWinding();
	if(this.windingAdjusted) {
		this.ax = ax_;
		this.ay = ay_;
		this.bx = cx_;
		this.by = cy_;
		this.cx = bx_;
		this.cy = by_;
	}
	this.mark = mark_;
};
trilateral_tri_Trilateral.__name__ = true;
trilateral_tri_Trilateral.prototype = {
	adjustWinding: function() {
		return this.ax * this.by - this.bx * this.ay + (this.bx * this.cy - this.cx * this.by) + (this.cx * this.ay - this.ax * this.cy) > 0;
	}
};
var trilateral_tri_Triangle = function(id_,A,B,C,depth_,colorID_) {
	this.id = id_;
	trilateral_tri_Trilateral.call(this,A.x,A.y,B.x,B.y,C.x,C.y);
	this.depth = depth_;
	this.alpha = 1.;
	this.colorID = colorID_;
	this.colorA = colorID_;
	this.colorB = colorID_;
	this.colorC = colorID_;
};
trilateral_tri_Triangle.__name__ = true;
trilateral_tri_Triangle.__super__ = trilateral_tri_Trilateral;
trilateral_tri_Triangle.prototype = $extend(trilateral_tri_Trilateral.prototype,{
});
var trilateral_tri__$TriangleArray_TriangleArray_$Impl_$ = {};
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$.__name__ = true;
trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new = function(t) {
	var this1 = t == null ? trilateral_tri__$TriangleArray_TriangleArray_$Impl_$._new([]) : t;
	return this1;
};
var trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$ = {};
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$.__name__ = true;
trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new = function(t) {
	var this1 = t == null ? trilateral_tri__$TrilateralArray_TrilateralArray_$Impl_$._new([]) : t;
	return this1;
};
var $fid = 0;
function $bind(o,m) { if( m == null ) return null; if( m.__id__ == null ) m.__id__ = $fid++; var f; if( o.hx__closures__ == null ) o.hx__closures__ = {}; else f = o.hx__closures__[m.__id__]; if( f == null ) { f = m.bind(o); o.hx__closures__[m.__id__] = f; } return f; }
String.__name__ = true;
Array.__name__ = true;
Object.defineProperty(js__$Boot_HaxeError.prototype,"message",{ get : function() {
	return String(this.val);
}});
htmlHelper_tools_AnimateTimer.counter = 0;
Main.main();
})();
